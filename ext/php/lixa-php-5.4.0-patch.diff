--- php-5.4.0.orig/ext/mysqli/mysqli_api.c	2012-01-01 14:15:04.000000000 +0100
+++ php-5.4.0/ext/mysqli/mysqli_api.c	2012-04-05 21:57:25.000000000 +0200
@@ -33,6 +33,10 @@
 #include "php_mysqli_structs.h"
 #include "mysqli_priv.h"
 
+/* begin: added by LIXA */
+#include "ext/lixa/lixa_php_config.h"
+/* end  : added by LIXA */
+
 /* {{{ proto mixed mysqli_affected_rows(object link)
    Get number of affected rows in previous MySQL operation */
 PHP_FUNCTION(mysqli_affected_rows)
@@ -586,7 +590,15 @@
 	}
 
 	if (!mysql->persistent) {
-		mysqli_close(mysql->mysql, close_type);
+/* begin: added by LIXA */
+#if defined(HAVE_LIXA_MYSQL)
+        if (!mysql->use_lixa_conn) {
+#endif
+            mysqli_close(mysql->mysql, close_type);
+#if defined(HAVE_LIXA_MYSQL)
+        }
+#endif
+/* end  : added by LIXA */
 	} else {
 		zend_rsrc_list_entry *le;
 		if (zend_hash_find(&EG(persistent_list), mysql->hash_key, strlen(mysql->hash_key) + 1, (void **)&le) == SUCCESS) {
--- php-5.4.0.orig/ext/mysqli/mysqli_nonapi.c	2012-01-01 14:15:04.000000000 +0100
+++ php-5.4.0/ext/mysqli/mysqli_nonapi.c	2012-04-14 21:20:42.000000000 +0200
@@ -32,6 +32,14 @@
 #include "php_mysqli_structs.h"
 #include "mysqli_priv.h"
 
+/* begin: added by LIXA */
+#include "ext/lixa/lixa_php_config.h"
+#ifdef HAVE_LIXA_MYSQL
+# include <lixamy.h>
+# include <lixanonapi.h>
+#endif
+/* end  : added by LIXA */
+
 #define SAFE_STR(a) ((a)?a:"")
 
 #ifndef zend_parse_parameters_none
@@ -141,6 +149,18 @@
 		hostname = MyG(default_host);
 	}
 
+/* begin: added by LIXA */
+#if defined(HAVE_LIXA_MYSQL)
+	mysql->use_lixa_conn = FALSE;
+	mysql->use_lixa_rmid = FALSE;
+	mysql->use_lixa_num = 0;
+	/* check database string, is it "lixa/[rmid-pos]{0-1}/n{0-1}" */
+	if (dbname)
+		lixa_nonapi_parse_conn_string(dbname, &mysql->use_lixa_conn,
+			&mysql->use_lixa_rmid, &mysql->use_lixa_num);
+#endif
+/* end  : added by LIXA */
+    
 	if (mysql->mysql && mysqli_resource &&
 		(mysqli_resource->status > MYSQLI_STATUS_INITIALIZED))
 	{
@@ -214,7 +234,26 @@
 	}
 	if (!mysql->mysql) {
 #if !defined(MYSQLI_USE_MYSQLND)
+# if defined(HAVE_LIXA_MYSQL)
+        if (mysql->use_lixa_conn) {
+            if (mysql->use_lixa_num == 0) {
+                if (!(mysql->mysql = lixa_my_get_conn()))
+                    goto err_lixa;
+            } else {
+                if (mysql->use_lixa_rmid) {
+                    if (!(mysql->mysql = lixa_my_get_conn_by_rmid(
+                              mysql->use_lixa_num)))
+                        goto err_lixa;
+                } else {
+                    if (!(mysql->mysql = lixa_my_get_conn_by_pos(
+                              mysql->use_lixa_num)))
+                        goto err_lixa;
+                }
+            }
+        } else if (!(mysql->mysql = mysql_init(NULL))) {
+# else
 		if (!(mysql->mysql = mysql_init(NULL))) {
+# endif
 #else
 		if (!(mysql->mysql = mysqlnd_init(persistent))) {
 #endif
@@ -236,16 +275,20 @@
 	/* BC for prior to bug fix #53425 */
 	flags |= CLIENT_MULTI_RESULTS;
 
-	if (mysql_real_connect(mysql->mysql, hostname, username, passwd, dbname, port, socket, flags) == NULL)
+# if defined(HAVE_LIXA_MYSQL)
+    /* if the connection was retrieved by LIXA, mysql_real_connect would not
+       be called */
+    if (!mysql->use_lixa_conn)
+# endif
+    if (mysql_real_connect(mysql->mysql, hostname, username, passwd, dbname, port, socket, flags) == NULL)
 #else
-	if (mysqlnd_connect(mysql->mysql, hostname, username, passwd, passwd_len, dbname, dbname_len,
-						port, socket, flags TSRMLS_CC) == NULL)
+        if (mysqlnd_connect(mysql->mysql, hostname, username, passwd, passwd_len, dbname, dbname_len,
+                            port, socket, flags TSRMLS_CC) == NULL)
 #endif
 	{
 		/* Save error messages - for mysqli_connect_error() & mysqli_connect_errno() */
 		php_mysqli_set_error(mysql_errno(mysql->mysql), (char *) mysql_error(mysql->mysql) TSRMLS_CC);
-		php_mysqli_throw_sql_exception((char *)mysql_sqlstate(mysql->mysql), mysql_errno(mysql->mysql) TSRMLS_CC,
-										"%s", mysql_error(mysql->mysql));
+		php_mysqli_throw_sql_exception((char *)mysql_sqlstate(mysql->mysql), mysql_errno(mysql->mysql) TSRMLS_CC, "%s", mysql_error(mysql->mysql));
 		if (!is_real_connect) {
 			/* free mysql structure */
 			mysqli_close(mysql->mysql, MYSQLI_CLOSE_DISCONNECTED);
@@ -293,6 +336,18 @@
 		RETURN_TRUE;
 	}
 
+/* begin: added by LIXA */
+#if defined(HAVE_LIXA_MYSQL)
+err_lixa:
+    php_mysqli_set_error(
+        99999,
+        "Unable to retrieve a valid connection from LIXA Transaction Manager"
+        TSRMLS_CC);
+    php_mysqli_throw_sql_exception(
+        (char *) "99999", 99999 TSRMLS_CC, "%s",
+        "Unable to retrieve a valid connection from LIXA Transaction Manager");
+#endif
+/* end: added by LIXA */
 err:
 	if (mysql->hash_key) {
 		efree(mysql->hash_key);
--- php-5.4.0.orig/ext/mysqli/php_mysqli_structs.h	2012-01-01 14:15:04.000000000 +0100
+++ php-5.4.0/ext/mysqli/php_mysqli_structs.h	2012-04-05 21:57:25.000000000 +0200
@@ -43,6 +43,10 @@
 #include "mysqli_mysqlnd.h"
 #else
 
+/* begin: added by LIXA */
+#include "ext/lixa/lixa_php_config.h"
+/* end  : added by LIXA */
+
 /*
   The libmysql headers (a PITA) also define it and there will be an warning.
   Undef it and later we might need to define it again.
@@ -128,6 +132,13 @@
 #if defined(MYSQLI_USE_MYSQLND)
 	int				async_result_fetch_type;
 #endif
+/* begin: added by LIXA */
+#if defined(HAVE_LIXA_MYSQL)
+    zend_bool           use_lixa_conn;
+    zend_bool           use_lixa_rmid;
+    int                 use_lixa_num;	
+#endif
+/* end  : added by LIXA */
 } MY_MYSQL;
 
 typedef struct {
