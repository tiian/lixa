/*
 * Copyright (c) 2009-2021, Christian Ferrari <tiian@users.sourceforge.net>
 * All rights reserved.
 *
 * This file is part of LIXA.
 *
 * LIXA is free software: you can redistribute this file and/or modify
 * it under the terms of the GNU Lesser General Public License version 2.1 as
 * published by the Free Software Foundation.
 *
 * LIXA is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with LIXA.  If not, see <http://www.gnu.org/licenses/>.
 */
#ifndef LIXA_H
# define LIXA_H



/*
 * WARNING:
 * xta.h is produced by xta.h.in: don't update xta.h, update only xta.h.in
 */



/*
 * This header contains:
 * - additional type and struct definitions that are necessary for building
 *   Application Programs
 * - functions that provides additional features, for instance how the
 *   project has been compiled
 */



#undef HAVE_GLIB_H
#undef HAVE_GMODULE_H
#undef HAVE_LIBXML_PARSER_H



#ifdef HAVE_GLIB_H
# include <glib.h>
#endif
#ifdef HAVE_GMODULE_H
# include <gmodule.h>
#endif
#ifdef HAVE_LIBXML_PARSER_H
# include <libxml/parser.h>
#endif



#include "xa.h"
#include "lixa_iface.h"



#ifdef __GNUC__
# define DEPRECATED __attribute__ ((deprecated))
#else
# define DEPRECATED
#endif



/**
 * It contains the configuration of a resource manager (how to reach and
 * use it)
 */
struct rsrmgr_config_s {
    /**
     * Name associated to the resource manager
     */
    xmlChar *name;
    /**
     * Switch file must be used to interact with the resource manager
     */
    xmlChar *switch_file;
    /**
     * xa_info string must be passed to the resource manager at xa_open
     * invocation
     */
    char     xa_open_info[MAXINFOSIZE];
    /**
     * xa_info string must be passed to the resource manager at xa_close
     * invocation
     */
    char     xa_close_info[MAXINFOSIZE];
};



/**
 * It contains the properties of a resource manager has been specified inside
 * the actual transactional profile; this is a reacher struct than
 * @ref rsrmgr_config_s
 */
struct act_rsrmgr_config_s {
    /**
     * This is a reference to the struct as parsed from XML config file
     */
    struct rsrmgr_config_s *generic;
    /**
     * This is a pointer to the dynamically loaded module containing the
     * interface wrapped by @ref xa_switch_t
     */
    GModule                *module;
    /**
     * Pointer to the structure must be used to interface the resource
     * manager
     */
    lixa_iface_t            lixa_iface;
    /**
     * TRUE if the configuration has been dynamically defined by the
     * Application Program using XTA interface; FALSE if the configuration has
     * been statically defined inside the lixac.conf file
     */
    int                     dynamically_defined;
};



#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */



    /**
     * This function is useful to inspect if the current build is integrated
     * with IBM DB2 database manager
     * @return a boolean value: TRUE or FALSE
     */
    int lixa_config_have_ibmdb2(void);

    

    /**
     * This function is useful to inspect if the current build is integrated
     * with MySQL database manager
     * @return a boolean value: TRUE or FALSE
     */
    int lixa_config_have_mysql(void);

    

    /**
     * This function is useful to inspect if the current build is integrated
     * with PostgreSQL database manager
     * @return a boolean value: TRUE or FALSE
     */
    int lixa_config_have_postgresql(void);

    

    /**
     * This function is useful to inspect if the current build is integrated
     * with Oracle database manager
     * @return a boolean value: TRUE or FALSE
     */
    int lixa_config_have_oracle(void);

    

    /**
     * This function is useful to inspect if the current build is integrated
     * with WebSphere MQ queue manager MOM (Message Oriented Middleware)
     * @return a boolean value: TRUE or FALSE
     */
    int lixa_config_have_webspheremq(void);

    

    /**
     * This function is useful to inspect if the current build is integrated
     * with WebSphere MQ queue manager MOM (Message Oriented Middleware) and
     * the switch file are built for Extended Transactional Cliend mode
     * @return a boolean value: TRUE or FALSE
     */
    int lixa_config_have_webspheremq_etc(void);

    

    /**
     * This function is useful to inspect if the current build is integrated
     * with WebSphere MQ queue manager MOM (Message Oriented Middleware) and
     * the switch file are build for server bind mode
     * @return a boolean value: TRUE or FALSE
     */
    int lixa_config_have_webspheremq_srv(void);

    

#ifdef __cplusplus
}
#endif /* __cplusplus */



#endif /* LIXA_H */
