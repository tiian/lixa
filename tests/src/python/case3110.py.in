#!@PYTHON@
#
# Copyright (c) 2009-2023, Christian Ferrari <tiian@users.sourceforge.net>
# All rights reserved.
#
# This file is part of LIXA.
#
# LIXA is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as published
# by the Free Software Foundation.
#
# LIXA is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with LIXA.  If not, see <http://www.gnu.org/licenses/>.
#

#
# This program is an example implementation of the
# "Single Application" Pattern
# as documented in LIXA manual:
# http://www.tiian.org/lixa/manuals/html/index.html
#
# This program accepts exactly two parameters on the command line:
# first parameter:  "commit", boolean value (if FALSE, "rollback")
# second parameter: "insert", boolean value (if FALSE, "delete")
#
# Programming Style note:
# the purpose of this small program is not to explain Python development
# techniques or good style, but simply to show XTA for Python using the easiest
# approach.
#

import sys
# This module is necessary for all the XTA related stuff
from xta import *


# Check command line parameters
if len(sys.argv) < 2:
	sys.stderr.write("This program requires at least one parameter\n")
	sys.exit(1)

connection_timeout = int(sys.argv[1])

# initialize XTA environment
Xta_init()

# create a new XTA Transaction Manager object
tm = TransactionManager()

# Create a new XA global transaction and retrieve a reference from
# the TransactionManager object
tx = tm.createTransaction()

# retrieve transaction config object
config = tx.getConfig()

sys.stdout.write("Config.getConnectionTimeout() = " +
	str(config.getConnectionTimeout()) + "\n")

if connection_timeout != config.getConnectionTimeout():
	sys.stderr.write("expected value = " + str(connection_timeout) +
		", real value = " + str(config.getConnectionTimeout()) + "\n")
	sys.exit(1)

config.setConnectionTimeout(1234)
if config.getConnectionTimeout() != 1234:
	sys.stderr.write("expected value = 1234, real value = " +
		str(config.getConnectionTimeout()) + "\n")
	sys.exit(1)

