# These test cases are not designed to check all the possible server side
# crashed - that's already addressed by ct_ test cases - but how the XTA client
# library reacts to server crashes
AT_BANNER([XTA: Single Application, state server crash])

AT_SETUP([XTA/8.0/0.0 server_xa_open_8])
AT_CHECK([if test "$LIXA_XTA" = "no"; then exit 77; fi])
# start the LIXA state server
AT_CHECK([export LIXA_CRASH_POINT=22; lixa_test_exec.sh reset start true], [0], [ignore], [ignore])
# start the XTA Application Program
AT_DATA([monkey1s.conf],
[[# monkey R.M. config
xa_open/0
]])
AT_CHECK([export LIXA_PROFILE=CASE_PROF_0038 ; lixa_test_exec.sh noreset none case0100 1 1 0 2>&1], [3], [ignore], [ignore])
AT_CLEANUP

AT_SETUP([XTA/8.0/0.1 server_xa_open_24])
AT_CHECK([if test "$LIXA_XTA" = "no"; then exit 77; fi])
# start the LIXA state server
AT_CHECK([export LIXA_CRASH_POINT=23; lixa_test_exec.sh reset start true], [0], [ignore], [ignore])
# start the XTA Application Program
AT_DATA([monkey1s.conf],
[[# monkey R.M. config
xa_open/0
]])
AT_CHECK([export LIXA_PROFILE=CASE_PROF_0038 ; lixa_test_exec.sh noreset none case0100 1 1 0 2>&1], [3], [ignore], [ignore])
AT_CLEANUP

AT_SETUP([XTA/8.0/1.0 server_xa_start_8])
AT_CHECK([if test "$LIXA_XTA" = "no"; then exit 77; fi])
# start the LIXA state server
AT_CHECK([export LIXA_CRASH_POINT=28; lixa_test_exec.sh reset start true], [0], [ignore], [ignore])
# start the XTA Application Program
AT_DATA([monkey1s.conf],
[[# monkey R.M. config
xa_open/0
xa_start/0
]])
AT_CHECK([export LIXA_PROFILE=CASE_PROF_0038 ; lixa_test_exec.sh noreset none case0100 1 1 0 2>&1], [3], [ignore], [ignore])
AT_CLEANUP

AT_SETUP([XTA/8.0/1.1 server_xa_start_24])
AT_CHECK([if test "$LIXA_XTA" = "no"; then exit 77; fi])
# start the LIXA state server
AT_CHECK([export LIXA_CRASH_POINT=29; lixa_test_exec.sh reset start true], [0], [ignore], [ignore])
# start the XTA Application Program
AT_DATA([monkey1s.conf],
[[# monkey R.M. config
xa_open/0
xa_start/0
xa_end/0
]])
AT_CHECK([export LIXA_PROFILE=CASE_PROF_0038 ; lixa_test_exec.sh noreset none case0100 1 1 0 2>&1], [4], [ignore], [ignore])
AT_CLEANUP

AT_SETUP([XTA/8.0/2.0 server_xa_end_8])
AT_CHECK([if test "$LIXA_XTA" = "no"; then exit 77; fi])
# start the LIXA state server
AT_CHECK([export LIXA_CRASH_POINT=30; lixa_test_exec.sh reset start true], [0], [ignore], [ignore])
# start the XTA Application Program
AT_DATA([monkey1s.conf],
[[# monkey R.M. config
xa_open/0
xa_start/0
xa_end/0
]])
AT_CHECK([export LIXA_PROFILE=CASE_PROF_0038 ; lixa_test_exec.sh noreset none case0100 1 1 0 2>&1], [4], [ignore], [ignore])
AT_CLEANUP

AT_SETUP([XTA/8.0/3.0 server_xa_prepare_8])
AT_CHECK([if test "$LIXA_XTA" = "no"; then exit 77; fi])
# start the LIXA state server
AT_CHECK([export LIXA_CRASH_POINT=32; export LIXA_SYNC_NODELAY=yes; lixa_test_exec.sh reset start true], [0], [ignore], [ignore])
# start the XTA Application Program
AT_DATA([monkey1s.conf],
[[# monkey R.M. config
xa_open/0
xa_start/0
xa_end/0
xa_prepare/0
]])
AT_CHECK([export LIXA_PROFILE=CASE_PROF_0038; lixa_test_exec.sh noreset none case0100 1 1 0 2>&1], [4], [ignore], [ignore])
AT_CLEANUP

AT_SETUP([XTA/8.0/3.1 automatic recovery])
AT_CHECK([if test "$LIXA_XTA" = "no"; then exit 77; fi])
# recover previous prepared transaction: TRADITIONAL state engine misses the
# prepared state and requires a useless rollback; JOURNAL state engine saves
# it and requires a commit
if test "$LIXA_STATE_ENGINE" = "JOURNAL" -o "$LIXA_STATE_ENGINE" = "MIGRATE"
then
AT_DATA([monkey1s.conf],
[[# monkey R.M. config
xa_open/0
xa_commit/0
xa_start/0
xa_end/0
xa_prepare/0
xa_commit/0
xa_close/0
]])
else
AT_DATA([monkey1s.conf],
[[# monkey R.M. config
xa_open/0
xa_rollback/0
xa_start/0
xa_end/0
xa_prepare/0
xa_commit/0
xa_close/0
]])
fi
AT_CHECK([export LIXA_PROFILE=CASE_PROF_0038; lixa_test_exec.sh noreset start case0100 1 0 0 2>&1], [0], [ignore], [ignore])
# delete the inserted records
if test "$LIXA_STATE_ENGINE" = "JOURNAL" -o "$LIXA_STATE_ENGINE" = "MIGRATE"
then
AT_DATA([monkey1s.conf],
[[# monkey R.M. config
xa_open/0
xa_start/0
xa_end/0
xa_prepare/0
xa_commit/0
xa_close/0
]])
AT_CHECK([export LIXA_PROFILE=CASE_PROF_0038; lixa_test_exec.sh noreset none case0100 1 0 0 2>&1], [0], [ignore], [ignore])
fi
# stop the LIXA state server
AT_CHECK([lixa_test_exec.sh noreset stop true], [0], [ignore], [ignore])
AT_CLEANUP

AT_SETUP([XTA/8.0/4.0 server_xa_commit_8])
AT_CHECK([if test "$LIXA_XTA" = "no"; then exit 77; fi])
# start the LIXA state server
AT_CHECK([export LIXA_CRASH_POINT=33; export LIXA_SYNC_NODELAY=yes; lixa_test_exec.sh reset start true], [0], [ignore], [ignore])
# start the XTA Application Program
AT_DATA([monkey1s.conf],
[[# monkey R.M. config
xa_open/0
xa_start/0
xa_end/0
xa_prepare/0
xa_commit/0
xa_close/0
]])
AT_CHECK([export LIXA_PROFILE=CASE_PROF_0038; lixa_test_exec.sh noreset none case0100 1 1 0 2>&1], [0], [ignore], [ignore])
AT_CLEANUP

AT_SETUP([XTA/8.0/4.1 automatic recovery])
AT_CHECK([if test "$LIXA_XTA" = "no"; then exit 77; fi])
# recover previous prepared transaction and delete rows from tables
# TRADITIONAL state engine misses the
# committed state and requires a commit; JOURNAL state engine saves
# it and requires nothing
if test "$LIXA_STATE_ENGINE" = "JOURNAL" -o "$LIXA_STATE_ENGINE" = "MIGRATE"
then
AT_DATA([monkey1s.conf],
[[# monkey R.M. config
xa_open/0
xa_start/0
xa_end/0
xa_prepare/0
xa_commit/0
xa_close/0
]])
else
AT_DATA([monkey1s.conf],
[[# monkey R.M. config
xa_open/0
xa_commit/-4
xa_start/0
xa_end/0
xa_prepare/0
xa_commit/0
xa_close/0
]])
fi
AT_CHECK([export LIXA_PROFILE=CASE_PROF_0038; lixa_test_exec.sh noreset start case0100 1 0 0 2>&1], [0], [ignore], [ignore])
# stop the LIXA state server
AT_CHECK([lixa_test_exec.sh noreset stop true], [0], [ignore], [ignore])
AT_CLEANUP

AT_SETUP([XTA/8.0/5.0 server_xa_rollback_8])
AT_CHECK([if test "$LIXA_XTA" = "no"; then exit 77; fi])
# start the LIXA state server
AT_CHECK([export LIXA_CRASH_POINT=35; export LIXA_SYNC_NODELAY=yes; lixa_test_exec.sh reset start true], [0], [ignore], [ignore])
# start the XTA Application Program
AT_DATA([monkey1s.conf],
[[# monkey R.M. config
xa_open/0
xa_start/0
xa_end/0
xa_rollback/0
xa_close/0
]])
AT_CHECK([export LIXA_PROFILE=CASE_PROF_0038; lixa_test_exec.sh noreset none case0100 0 1 0 2>&1], [0], [ignore], [ignore])
AT_CLEANUP
AT_SETUP([XTA/8.0/5.1 automatic recovery])
AT_CHECK([if test "$LIXA_XTA" = "no"; then exit 77; fi])
# recover previous prepared transaction and delete rows from tables
# TRADITIONAL state engine misses the
# rollback state and requires a further rollback; JOURNAL state engine saves
# it and requires nothing
if test "$LIXA_STATE_ENGINE" = "JOURNAL" -o "$LIXA_STATE_ENGINE" = "MIGRATE"
then
AT_DATA([monkey1s.conf],
[[# monkey R.M. config
xa_open/0
xa_start/0
xa_end/0
xa_rollback/0
xa_close/0
]])
else
AT_DATA([monkey1s.conf],
[[# monkey R.M. config
xa_open/0
xa_rollback/-4
xa_start/0
xa_end/0
xa_rollback/0
xa_close/0
]])
fi
AT_CHECK([export LIXA_PROFILE=CASE_PROF_0038; lixa_test_exec.sh noreset start case0100 0 1 0 2>&1], [0], [ignore], [ignore])
# stop the LIXA state server
AT_CHECK([lixa_test_exec.sh noreset stop true], [0], [ignore], [ignore])
AT_CLEANUP

