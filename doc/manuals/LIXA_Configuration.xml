<chapter>
  <title>Configuration</title>
  <para>
    A LIXA system is the assembling of two components: the client and 
    the server. The figure
    below shows a typical configuration with three distinct Application
    Programs and four different Resource Managers.
  </para>
  <figure xml:id="config1">
    <title>Typical LIXA topology</title>
    <mediaobject>
      <imageobject>
	<imagedata fileref="LIXA_Configuration_1.png"/>
      </imageobject>
    </mediaobject>
  </figure>
  <section>
    <title>Architectural elements</title>
    <para>
      The <command>lixad</command> daemon process can be executed on any
      system: there is no need it is executed on the same system is hosting
      the Application Programs. The communications between 
      the client and the server (<command>lixad</command>) uses TCP/IP sockets.
    </para>
    <para>
      The <command>lixac</command> library is embedded in the Application
      Programs; the communication between the Application Program and
      the <command>lixac</command> library uses TX (Transaction Demarcation)
      API, see <citation>TXspec</citation>. The <command>lixac</command> 
      library contains all the logic of the LIXA Transaction Manager.
    </para>
    <para>
      The communication between the Application Program and the Resource
      Managers depends on Resource Managers type and configuration: 
      it may be cross memory based, TCP/IP based, System V IPC, etc...
      The communication between the <command>lixac</command> library and the
      Resource Manager depends on Resource Manager configuration and must be
      of the same used by the Application Program.
    </para>
    <para>
      The communication between <command>lixac</command> library and 
      <command>lixad</command> is ever istantiated by the client: the
      server never calls the clients.
    </para>
  </section>
  <section>
    <title>Configuring the server</title>
    <para>
      The default configuration file is <filename>etc/lixad_conf.xml</filename>
      and is located at the root installation path (i.e.
      <filename>/opt/lixa/etc/lixad_conf.xml</filename>). 
      Below there is a sample configuration file:
      <screen>
&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
  &lt;server pid_file="/tmp/lixa/var/run.pid"&gt;
  &lt;listeners&gt;
    &lt;listener domain="AF_INET" address="127.0.0.1" port="3456"/&gt;
    &lt;listener domain="AF_INET" address="0.0.0.0" port="2345"/&gt;
  &lt;/listeners&gt;
  &lt;managers&gt;
    &lt;manager status_file="/tmp/lixa/var/lixad_status1"/&gt;
    &lt;manager status_file="/tmp/lixa/var/lixad_status2"/&gt;
    &lt;manager status_file="/tmp/lixa/var/lixad_status3"/&gt;
  &lt;/managers&gt;
&lt;/server&gt;
      </screen>
      
      The tags and the
      properties of the XML file are described below:
      <itemizedlist mark='bullet'>
	<listitem><para>
	    <varname>pid_file</varname>: it is the file used by the server 
	    to store the daemon <acronym>PID</acronym>; the server creates
	    the file at start-up and destroys it at shutdown
	</para></listitem>
	<listitem><para>
	    <varname>listener</varname>: the server can activate one or more
	    listeners; most of the times one listener is sufficient, but if
	    you want to use only a subset of the IP addresses defined at
	    the operating system level, you have do configure a dedicated
	    listener for every desired address
	</para></listitem>
	<listitem><para>
	    <varname>domain</varname>: the type of socket must be used to
	    listen for clients. The only allowed type is 
	    <constant>AF_INET</constant>; this may change in the future
	</para></listitem>
	<listitem><para>
	    <varname>address</varname>: the address must be used to listen for
	    clients; the special value <constant>0.0.0.0</constant> means
	    any address
	</para></listitem>
	<listitem><para>
	    <varname>port</varname>: the port must be used to listen for
	    clients; it must be a free port (use command 
	    <command>netstat</command> to find out one)
	</para></listitem>
	<listitem><para>
	    <varname>manager</varname>: any configured 
	    <emphasis>manager</emphasis> is a server worker and has its own
	    associated thread. The number of managers should be activated 
	    depends on the workload; if D is the number of indipendent 
	    hard disk devices and P is the number of processors/cores, the
	    suggested values are in the range:
	    <equation><title>Suggested range for the number of managers</title>
	      <mathphrase>
		[min(D,P) ; D*P]
	      </mathphrase>
	    </equation>
	</para></listitem>
	<listitem><para>
	    <varname>status_file</varname>: the physical path must be used to
	    create the status files (a couple) for a manager; this generally is
	    a persistent and reliable storage device like a RAID partition.
	    The string specified by the tag <varname>status_file</varname>
	    is used as a prefix: every manager (thread) creates two files
	    with the same prefix and different suffix.
	</para></listitem>
      </itemizedlist>
    </para>
  </section>
  <section>
    <title>Configuring the client</title>
    <para>
      The default configuration file is <filename>etc/lixac_conf.xml</filename>
      and is located at the root installation path (i.e.
      <filename>/opt/lixa/etc/lixac_conf.xml</filename>). 
      Below there is a sample configuration file:
      <screen>
&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;client&gt;
  &lt;trnmgrs&gt;
    &lt;trnmgr name="server1" domain="AF_INET" address="10.23.45.67" port="2345" /&gt;
    &lt;trnmgr name="server2" domain="AF_INET" address="10.23.46.91" port="3456" /&gt;
  &lt;/trnmgrs&gt;
  &lt;rsrmgrs&gt;
    &lt;rsrmgr name="OracleXE_dynreg" switch_file="/tmp/lixa/lib/switch_oracle_dynreg.so" xa_open_info="Oracle_XA+Acc=P/hr/hr+SesTm=30+LogDir=/tmp+threads=true+DbgFl=7+Loose_Coupling=true" xa_close_info="" /&gt;
    &lt;rsrmgr name="OracleXE_stareg" switch_file="/tmp/lixa/lib/switch_oracle_stareg.so" xa_open_info="Oracle_XA+Acc=P/hr/hr+SesTm=30+LogDir=/tmp+threads=true+DbgFl=7+Loose_Coupling=true" xa_close_info="" /&gt;
    &lt;rsrmgr name="IBMDB2_dynreg" switch_file="/tmp/lixa/lib/switch_ibmdb2_dynreg.so" xa_open_info="axlib=/tmp/lixa/lib/liblixacmt.so,db=sample,tpm=lixa" xa_close_info="" /&gt;
    &lt;rsrmgr name="IBMDB2_stareg" switch_file="/tmp/lixa/lib/switch_ibmdb2_stareg.so" xa_open_info="axlib=/tmp/lixa/lib/liblixacmt.so,db=sample,tpm=lixa" xa_close_info="" /&gt;
  &lt;/rsrmgrs&gt;
  &lt;profiles&gt;
    &lt;profile name="GT71"&gt;
      &lt;trnmgrs&gt;
        &lt;trnmgr&gt;local_1&lt;/trnmgr&gt;
      &lt;/trnmgrs&gt;
      &lt;rsrmgrs&gt;
        &lt;rsrmgr&gt;OracleXE_stareg&lt;/rsrmgr&gt;
        &lt;rsrmgr&gt;IBMDB2_stareg&lt;/rsrmgr&gt;
      &lt;/rsrmgrs&gt;
    &lt;/profile&gt;
    &lt;profile name="VZ67"&gt;
      &lt;trnmgrs&gt;
        &lt;trnmgr&gt;local_1&lt;/trnmgr&gt;
      &lt;/trnmgrs&gt;
      &lt;rsrmgrs&gt;
        &lt;rsrmgr&gt;OracleXE_dynreg&lt;/rsrmgr&gt;
        &lt;rsrmgr&gt;IBMDB2_dynreg&lt;/rsrmgr&gt;
      &lt;/rsrmgrs&gt;
    &lt;/profile&gt;
    &lt;profile name="AG71"&gt;
      &lt;trnmgrs&gt;
        &lt;trnmgr&gt;local_2&lt;/trnmgr&gt;
      &lt;/trnmgrs&gt;
      &lt;rsrmgrs&gt;
        &lt;rsrmgr&gt;IBMDB2_dynreg&lt;/rsrmgr&gt;
      &lt;/rsrmgrs&gt;
    &lt;/profile&gt;
  &lt;/profiles&gt;
&lt;/client&gt;
      </screen>
      The tags and the
      properties of the XML file are described below:
      <itemizedlist mark='bullet'>
	<listitem><para>
	    <varname>trnmgr</varname>: this section is used to describe a
	    manager (a LIXA server instance) that must be reached by any
	    client described below
	</para></listitem>
	<listitem><para>
	    <varname>trnmgr/name</varname>: a name associated to the 
	    manager; it is a logical name that is referenced by the profiles
	    defined below
	</para></listitem>
	<listitem><para>
	    <varname>domain</varname>: it must be the same domain specified 
	    by the listener that must be reached; the listener is configured
	    in <filename>lixad_conf.xml</filename> (see above) and may be
	    local or remote
	</para></listitem>
	<listitem><para>
	    <varname>address</varname>: it must be the same same address 
	    specified by the listener that must be reached; the listener is
	    configured in <filename>lixad_conf.xml</filename> (see above)
	    and may be local or remote
	</para></listitem>
	<listitem><para>
	    <varname>port</varname>: it must be the same port specified
	    by the listener that must be reached; the listener is
	    configured in
	    <filename>lixad_conf.xml</filename> (see above)
	    and may be local or remote
	</para></listitem>
	<listitem><para>
	    <varname>rsrmgr</varname>: this section is used to describe 
	    any resource manager that will be used by the
	    Application Programs configured below (see profiles)
	</para></listitem>
	<listitem><para>
	    <varname>rsrmgr/name</varname>: a name associated to the 
	    Resource Manager; it is a logical name that is referenced by
	    the profile defined below
	</para></listitem>
	<listitem><para>
	    <varname>switch_file</varname>: name of the file that contains 
	    the XA switch structure; the file is produced by the installation
	    procedure
	</para></listitem>
	<listitem><para>
	    <varname>xa_open_info</varname>: it is the string of parameters
	    that must be passed to the Resource Manager by the xa_open() 
	    function call; the content
	    of the string depends on the Resource Manager, see its
	    documentation. The string can not exceed 255 characters
	</para></listitem>
	<listitem><para>
	    <varname>xa_close_info</varname>: it is the string of parameters
	    that must be passed to the Resource Manager by the xa_open() 
	    function call; the content
	    of the string depends on the Resource Manager, see its
	    documentation. The string can not exceed 255 characters
	</para></listitem>
	<listitem><para>
	    <varname>profile</varname>: it contains the description of the
	    LIXA 


every transactional profile must be
	    used by the Application Programs needs to be listed here
	</para></listitem>
	<listitem><para>
	    <varname>profile/name</varname>: the name associated to the
	    transaction profile; this name is used in different places and
	    it is suggested to avoid special characters, blanks and possibly
	    mixed case (these hints may help you in troubleshooting)
	</para></listitem>
	<listitem><para>
	    <varname>profile/trnmgr</varname>: manager will be used to store
	    the transactional information associated to this profile; more
	    than one manager can be specified but <emphasis>only</emphasis> 
	    the first one is used with current release software
	</para></listitem>
	<listitem><para>
	    <varname>profile/rsrmgr</varname>: every Resource Manager must be
	    used by the Application Programs associated to this transactional
	    profile needs to be listed here. There is no a limit: you can
	    specify 1, 2, 3, ... resource managers. Avoid useless resource
	    manager because xa_open() and xa_close() will be performed 
	    against all the listed resource managers. If you can choose 
	    between a "dynamic" and a "static" version of the same resource
	    manager, the "dynamic" one is more efficient	    
	</para></listitem>
      </itemizedlist>
    </para>
    <section>
      <title>Client configuration explanation</title>
      <para>
	The client configuration file contains three sections:
	<itemizedlist mark='bullet'>
	  <listitem><para>
	      <varname>trnmgrs</varname>: the list of the LIXA daemons you are
	      running inside your network and you will use to manage the
	      persistent state of the clients will use the configuration
	      file; many times a single LIXA server is sufficient, but
	      sometimes you need more (development, test and production
	      environment might use different LIXA servers)
	  </para></listitem>
	  <listitem><para>
	      <varname>rsrmgrs</varname>: the list of the resource managers
	      necessary to Application Programs execution; there is no limit
	      to the number of resource managers from a LIXA point of view
	  </para></listitem>
	  <listitem><para>
	      <varname>profiles</varname>: the list of the available
	      transactional profiles for your Application Programs. This
	      concept allows you a great configuration flexibility: the same
	      configuration file can be used for completely different
	      Application Programs and completely different environment.
	      As an example, imagine you have 3 distinct applications and
	      every application uses a different mix of resource managers; then
	      you manage 3 different environments (development, test and
	      production): with 9 profiles you can completely model your
	      transactional needs (APP1DEV, APP2DEV, APP3DEV, APP1TEST,
	      APP2TEST, APP3TEST, APP1PROD, APP2PROD, APP3PROD).
	  </para></listitem>
	</itemizedlist>
	The <varname>LIXA_PROFILE</varname> environment variable must be used 
	to specify the transactional profile associated to the Application 
	Program.
	If you do not specify a valid transactional profile, the first profile
	of the list will be applied.
	<note><para>
	    There is not an alternate way to specify the transactional profile:
	    <function>tx_open</function> does not allow parameters.
	</para></note>
      </para>
    </section>
  </section>
  <section>
    <title>Environment variables</title>
    <para>
      Some environment variables are available to tailor the LIXA configuration
      to your needs.

      LIXA_PROFILE LIXA_CONFIG_FILE LIXA_JOB
      LIXA_CRASH_POINT LIXA_CRASH_COUNT
      LIXA_TRACE_MASK

    </para>
  </section>
</chapter>
