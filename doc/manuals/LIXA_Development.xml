<chapter>
  <title>Development</title>
  <para>
    This chapter explains how you can develop your own application
    using the libraries and the tools supplied by LIXA project.
  </para>
  <para>
    LIXA project ships some example C programs you can find in directory
    <filename>/opt/lixa/share/doc/lixa-X.Y.Z/examples/</filename> after
    software installation (see <xref linkend="Installation"/>).
  </para>
  <section>
    <title>The first example</title>
    <para>
      Create a working directory in a place you are comfortable with:
      <screen>
tiian@ubuntu:~$ cd
tiian@ubuntu:~$ mkdir tmp
tiian@ubuntu:~$ cd tmp
tiian@ubuntu:~/tmp$
      </screen>
    </para>
    <para>
      Copy file <filename>example1.c</filename> in your working dir:
      <screen>
tiian@ubuntu:~/tmp$ cp /opt/lixa/share/doc/lixa-X.Y.Z/examples/example1.c .
      </screen>
      Substitute <quote>lixa-X.Y.Z</quote> with the actual version of
      the software you installed.
    </para>
    <para>
      Compile and link the C example program:
      <screen>
tiian@ubuntu:~/tmp$ gcc example1.c -Wall -I /opt/lixa/include/ -L /opt/lixa/lib/ -l lixacmt -o example1
      </screen>
      Check the output of the linker:
      <screen>
tiian@ubuntu:~/tmp$ ldd example1
        linux-gate.so.1 =>  (0xb77a9000)
        liblixacmt.so.0 => not found
        libc.so.6 => /lib/tls/i686/cmov/libc.so.6 (0xb7653000)
        /lib/ld-linux.so.2 (0xb77aa000)
      </screen>
      <filename>liblixacmt.so.0</filename> library is not resolved because
      the LIXA libraries are not in system standard library path. You can
      bypass the issue exporting <varname>LD_LIBRARY_PATH</varname>
      variable and checking it again:
      <screen>
tiian@ubuntu:~/tmp$ export LD_LIBRARY_PATH=/opt/lixa/lib
tiian@ubuntu:~/tmp$ ldd example1
        linux-gate.so.1 =>  (0xb773f000)
        liblixacmt.so.0 => /opt/lixa/lib/liblixacmt.so.0 (0xb7724000)
        libc.so.6 => /lib/tls/i686/cmov/libc.so.6 (0xb75d0000)
        libgmodule-2.0.so.0 => /usr/lib/libgmodule-2.0.so.0 (0xb75cb000)
        libdl.so.2 => /lib/tls/i686/cmov/libdl.so.2 (0xb75c7000)
        libgthread-2.0.so.0 => /usr/lib/libgthread-2.0.so.0 (0xb75c2000)
        librt.so.1 => /lib/tls/i686/cmov/librt.so.1 (0xb75b9000)
        libglib-2.0.so.0 => /usr/lib/libglib-2.0.so.0 (0xb7508000)
        libxml2.so.2 => /usr/lib/libxml2.so.2 (0xb73e8000)
        liblixabmt.so.0 => /opt/lixa/lib/liblixabmt.so.0 (0xb73d4000)
        libpthread.so.0 => /lib/tls/i686/cmov/libpthread.so.0 (0xb73bc000)
        /lib/ld-linux.so.2 (0xb7740000)
        libpcre.so.3 => /usr/lib/libpcre.so.3 (0xb7395000)
        libz.so.1 => /usr/lib/libz.so.1 (0xb7380000)
        libm.so.6 => /lib/tls/i686/cmov/libm.so.6 (0xb735b000)
        libuuid.so.1 => /lib/libuuid.so.1 (0xb7356000)
      </screen>
      Now you are ready to start your first application:
      <screen>
tiian@ubuntu:~/tmp$ ./example1
tx_open(): -7
      </screen>
      The <function>tx_open()</function> function returned the value 
      <quote>-7</quote> (<constant>TX_FAIL</constant>) 
      because the state server is not running.
      Start the state server (see <xref linkend="Background_execution"/>)
      and try again:
      <screen>
tiian@ubuntu:~/tmp$ sudo su - lixa
lixa@ubuntu:~$ /opt/lixa/sbin/lixad --daemon
lixa@ubuntu:~$ exit
logout
tiian@ubuntu:~/tmp$ ps -ef|grep lixad|grep -v grep
lixa     12866     1  0 21:35 ?        00:00:00 /opt/lixa/sbin/lixad --daemon
tiian@ubuntu:~/tmp$ export LD_LIBRARY_PATH=/opt/lixa/lib
tiian@ubuntu:~/tmp$ ./example1
tx_open(): 0
tx_begin(): 0
tx_commit(): 0
tx_begin(): 0
tx_rollback(): 0
tx_close(): 0
      </screen>
      Your first program has connected to the state server and has performed
      two dummy distributed transactions: <emphasis>commit</emphasis> and 
      <emphasis>rollback</emphasis>.
    </para>
    <section>
      <title>Some details about the example</title>
      <para>
	You have not specified a specific profile:
	<screen>
tiian@ubuntu:~/tmp$ echo $LIXA_PROFILE

	</screen>
	The LIXA client library used the default one, the first listed in
	<filename>etc/lixac_conf.xml</filename>. If you inspected the 
	configuration file <filename>/opt/lixa/etc/lixac_conf.xml</filename> 
	you would see something like this:
	<screen>
tiian@ubuntu:~/tmp$ cat /opt/lixa/etc/lixac_conf.xml
&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;client&gt;
  &lt;sttsrvs&gt;
    &lt;sttsrv name="local_1" domain="AF_INET" address="127.0.0.1" port="2345" /&gt;
[...]
    &lt;rsrmgr name="LIXAdummyRM" switch_file="/opt/lixa/lib/switch_lixa_dummyrm.so" xa_open_info="dummy open string" xa_close_info="dummy close string" /&gt;
[...]
  &lt;profiles&gt;
    &lt;profile name="CF05"&gt;
      &lt;sttsrvs&gt;
        &lt;sttsrv&gt;local_1&lt;/sttsrv&gt;
      &lt;/sttsrvs&gt;
      &lt;rsrmgrs&gt;
        &lt;rsrmgr&gt;LIXAdummyRM&lt;/rsrmgr&gt;
        &lt;rsrmgr&gt;LIXAdummyRM&lt;/rsrmgr&gt;
      &lt;/rsrmgrs&gt;
    &lt;/profile&gt;
    &lt;profile name="GT71"&gt;
[...]
  &lt;/profiles&gt;
&lt;/client&gt;
	</screen>
	The default profile is named <quote>CF05</quote> and lists two
	resource managers of the same type: <quote>LIXAdummyRM</quote>;
	the related switch file is the file 
	<filename>/opt/lixa/lib/switch_lixa_dummyrm.so</filename>.
	The dummy resource managers supplied by the LIXA project is
	a special trivial resource managers: it ever returns
	<constant>XA_OK</constant>. If you are interested in LIXA dummy
	Resource Manager implementation, take a look to the source file
	<filename>src/client/switch/lixa/lixa_dummyrm.c</filename>.
	To verify that the program is using the dummy resource manager,
	execute it with <varname>LIXA_TRACE_MASK</varname> environment
	variable set to <constant>0x00008000</constant>:
	<screen>
tiian@ubuntu:~/tmp$ export LIXA_TRACE_MASK=0x00008000
tiian@ubuntu:~/tmp$ ./example1
[...]
2011-04-05 22:07:59.953844 [29359/3073444096] client_config_load_switch
2011-04-05 22:07:59.953875 [29359/3073444096] client_config_load_switch: resource manager # 0, name='LIXAdummyRM', switch_file='/opt/lixa/lib/switch_lixa_dummyrm.so'
2011-04-05 22:07:59.954220 [29359/3073444096] client_config_load_switch: module address 0x804e410, function lixa_get_xa_switch found at address 0xb76dd790
2011-04-05 22:07:59.954254 [29359/3073444096] client_config_load_switch: lixa_getxa_switch()->name = 'lixa_dummyrm', lixa_get_xa_switch()->flags = 0
2011-04-05 22:07:59.954279 [29359/3073444096] client_config_load_switch: resource manager dynamically registers: false
2011-04-05 22:07:59.954302 [29359/3073444096] client_config_load_switch: resource manager does not support association migration: false
2011-04-05 22:07:59.954325 [29359/3073444096] client_config_load_switch: resource manager supports asynchronous operations: false
2011-04-05 22:07:59.954348 [29359/3073444096] client_config_load_switch: resource manager # 1, name='LIXAdummyRM', switch_file='/opt/lixa/lib/switch_lixa_dummyrm.so'
2011-04-05 22:07:59.954379 [29359/3073444096] client_config_load_switch: module address 0x804e410, function lixa_get_xa_switch found at address 0xb76dd790
2011-04-05 22:07:59.954405 [29359/3073444096] client_config_load_switch: lixa_getxa_switch()->name = 'lixa_dummyrm', lixa_get_xa_switch()->flags = 0
2011-04-05 22:07:59.954429 [29359/3073444096] client_config_load_switch: resource manager dynamically registers: false
2011-04-05 22:07:59.954451 [29359/3073444096] client_config_load_switch: resource manager does not support association migration: false
2011-04-05 22:07:59.954474 [29359/3073444096] client_config_load_switch: resource manager supports asynchronous operations: false
[...]
tx_open(): 0
tx_begin(): 0
tx_commit(): 0
tx_begin(): 0
tx_rollback(): 0
2011-04-05 22:08:00.128531 [29359/3073444096] client_unconfig
2011-04-05 22:08:00.128883 [29359/3073444096] client_unconfig: acquiring exclusive mutex
2011-04-05 22:08:00.129174 [29359/3073444096] client_config_unload_switch
2011-04-05 22:08:00.129399 [29359/3073444096] client_config_unload_switch: resource manager # 0, defined in config as 'LIXAdummyRM', module address 0x804e410, xa_switch->name='lixa_dummyrm', xa_switch->flags=0
2011-04-05 22:08:00.129594 [29359/3073444096] client_config_unload_switch: resource manager # 1, defined in config as 'LIXAdummyRM', module address 0x804e410, xa_switch->name='lixa_dummyrm', xa_switch->flags=0
2011-04-05 22:08:00.129852 [29359/3073444096] client_config_unload_switch/excp=1/ret_cod=0/errno=0
2011-04-05 22:08:00.130024 [29359/3073444096] client_unconfig/xmlCleanupParser
2011-04-05 22:08:00.130215 [29359/3073444096] client_unconfig: releasing exclusive mutex
2011-04-05 22:08:00.130371 [29359/3073444096] client_unconfig/excp=2/ret_cod=0/errno=0
tx_close(): 0
	</screen>
      </para>
    </section>
  </section>
  <section>
    <title>An example with a <quote>real</quote> Resource Manager (Oracle DBMS)</title>
    <para>
      Using a real Resource Manager, like a DBMS, requires some extra effort
      because you have to set-up the environment needed by the Resource
      Manager. The example explained in this section was developed using
      Oracle Database 10g Release 2 (10.2) Express Edition: if you used 
      a different version, you might need to fix some of the details 
      showed by this example.
      <important><para>
	  If you did not yet installed the software provided by Oracle,
	  please refer to the official Oracle site to download the
	  software and to pick-up the information necessary to install 
	  and configure
	  the database. This manual does not give you information related
	  to Oracle technology: it is assumed you already installed and
	  configured the database.
      </para></important>
      The LIXA software must be configured to support the Oracle Database
      Server resource manager as explained in 
      <xref linkend="Linking_third_party_resource_managers"/>.
    </para>
    <section>
      <title>Set-up Oracle environment</title>
      <section>
	<title>Start-up the Oracle server</title>
	<para>
	  If the database server was not running, you could start it
	  with these commands:
	  <screen>
tiian@ubuntu:~/tmp$ sudo /etc/init.d/oracle-xe enable
tiian@ubuntu:~/tmp$ sudo /etc/init.d/oracle-xe start
Starting Oracle Net Listener.
Starting Oracle Database 10g Express Edition Instance.

	  </screen>
	</para>
      </section>
      <section>
	<title>Create the XA related views</title>
	<note><para>
	    The steps explained below might be not necessary with some
	    versions of the Oracle software, but they are necessary
	    with Oracle XE 10.2.0.1.
	</para></note>
	<para>
	  First of all you must be able to connect as <quote>SYSDBA</quote>
	  from a terminal session; the commands below show what happens when
	  I connect to the Oracle server using the user 
	  <systemitem class="username">sys</systemitem> with password
	  <quote>oracle</quote>:
	  <screen>
tiian@ubuntu:~$ sudo su - oracle
/usr/lib/oracle/xe/app/oracle/product/10.2.0/server/bin/nls_lang.sh: 114: [[: not found
/usr/lib/oracle/xe/app/oracle/product/10.2.0/server/bin/nls_lang.sh: 114: [[: not found
oracle@ubuntu:~$ echo $ORACLE_HOME
/usr/lib/oracle/xe/app/oracle/product/10.2.0/server
oracle@ubuntu:~$ sqlplus "sys/oracle as sysdba"

SQL*Plus: Release 10.2.0.1.0 - Production on Thu Apr 7 22:23:56 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> exit
Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	  </screen>
	  You must check the file <filename>xaview.sql</filename>:
	  <screen>
oracle@ubuntu:~$ ls -la $ORACLE_HOME/rdbms/admin/xaview.sql
-rw-r--r-- 1 oracle dba 1754 2006-02-24 06:18 /usr/lib/oracle/xe/app/oracle/product/10.2.0/server/rdbms/admin/xaview.sql
	  </screen>
	  It contains the SQL instructions necessary to create two specific
	  system views that could be not defined in your database; the
	  following commands are related to a database that contains
	  the desired views:
	  <screen>
oracle@ubuntu:~$ sqlplus "sys/oracle as sysdba"

SQL*Plus: Release 10.2.0.1.0 - Production on Thu Apr 7 22:32:45 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> select * from v$pending_xatrans$;

no rows selected

SQL> select * from v$xatrans$;

no rows selected

SQL> exit
Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	  </screen>
	  If the command failed the views would be not defined; you can
	  create them with a command like this:
	  <screen>
oracle@ubuntu:~$ cat $ORACLE_HOME/rdbms/admin/xaview.sql | sqlplus "sys/oracle as sysdba"

SQL*Plus: Release 10.2.0.1.0 - Production on Thu Apr 7 22:37:06 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL>
View dropped.

SQL>
View dropped.

SQL> SQL> SQL>   2    3    4    5    6    7    8
View created.

SQL> SQL> SQL> SQL>   2    3    4    5    6    7    8    9   10   11
View created.

SQL> SQL> SQL> Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	  </screen>
	</para>
      </section>
      <section>
	<title>Authorize the XA related views</title>
	<para>
	  The example programs supplied by the LIXA project are designed
	  to use the 
	  <systemitem class="username">hr</systemitem> user; you 
	  <emphasis>must</emphasis> grant
	  the necessary privileges to all the users you want to use for
	  your Application Programs. The below commands show how to grant
	  the necessary privileges to
	  <systemitem class="username">hr</systemitem>:
	  <screen>
oracle@ubuntu:~$ sqlplus "sys/oracle as sysdba"

SQL*Plus: Release 10.2.0.1.0 - Production on Thu Apr 7 22:44:44 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> grant select on dba_pending_transactions to hr;

Grant succeeded.

SQL> grant select on v$pending_xatrans$ to hr;

Grant succeeded.

SQL> grant select on v$xatrans$ to hr;

Grant succeeded.

SQL> exit
Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	  </screen>
	</para>
	<note><para>
	    If the user
	    <systemitem class="username">hr</systemitem> did not exist and
	    the above commands failed,
	    you should read Oracle documentation and pick-up the necessary
	    information to create it.
	</para></note>
      </section>
      <section>
	<title>Unlock <quote><systemitem class="username">hr</systemitem></quote> Oracle user</title>
	<para>
	  The example programs supplied by the LIXA project are designed
	  to use the 
	  <systemitem class="username">hr</systemitem> user; it might be 
	  <emphasis>locked</emphasis> after Oracle software installation.
	  The below commands show how to unlock it:
	  <screen>
oracle@ubuntu:~$ sqlplus "sys/oracle as sysdba"

SQL*Plus: Release 10.2.0.1.0 - Production on Thu Apr 7 22:44:44 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> alter user hr account unlock;

User altered.

SQL> exit
Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	  </screen>
	  You may perform the same operation using the graphical (web based)
	  interface.
	</para>
      </section>
    </section>
    <section>
      <title>Start the LIXA state server</title>
      <para>
	Start the state server as showed below:
	<screen>
tiian@ubuntu:~$ sudo su - lixa
lixa@ubuntu:~$ /opt/lixa/sbin/lixad --daemon
lixa@ubuntu:~$ exit
logout
tiian@ubuntu:~$ ps -ef|grep lixad|grep -v grep
lixa     12866     1  0 21:35 ?        00:00:00 /opt/lixa/sbin/lixad --daemon
	</screen>
      </para>
    </section>
    <section>
      <title>Build the client program</title>
      <para>
	Prepare the client (Application Program) using the below commands:
	<screen>
tiian@ubuntu:~$ mkdir tmp
tiian@ubuntu:~$ cd tmp
tiian@ubuntu:~/tmp$ cp /opt/lixa/share/doc/lixa-X.Y.Z/examples/example2_ora.c .
tiian@ubuntu:~/tmp$ gcc example2_ora.c -Wall -I /opt/lixa/include/ -L /opt/lixa/lib/ -l lixacmt -I /usr/lib/oracle/xe/app/oracle/product/10.2.0/server/rdbms/public -L /usr/lib/oracle/xe/app/oracle/product/10.2.0/server/lib -l clntsh -l nnz10 -o example2_ora
	</screen>
	Verify the executable produced by gcc:
	<screen>
tiian@ubuntu:~/tmp$ ldd example2_ora
        linux-gate.so.1 =>  (0xb776d000)
        liblixacmt.so.0 => not found
        libclntsh.so.10.1 => not found
        libnnz10.so => not found
        libc.so.6 => /lib/tls/i686/cmov/libc.so.6 (0xb7616000)
        /lib/ld-linux.so.2 (0xb776e000)
	</screen>
      </para>
    </section>
    <section>
      <title>Set-up LIXA environment</title>
      <para>
	There are three unresolved references that can be fixed setting up
	the environment properly:
	<screen>
tiian@ubuntu:~/tmp$ echo $LD_LIBRARY_PATH

tiian@ubuntu:~/tmp$ export LD_LIBRARY_PATH=/usr/lib/oracle/xe/app/oracle/product/10.2.0/server/lib:/opt/lixa/lib

tiian@ubuntu:~/tmp$ echo $LD_LIBRARY_PATH
/usr/lib/oracle/xe/app/oracle/product/10.2.0/server/lib:/opt/lixa/lib
	</screen>
	Check again the executable:
	<screen>
tiian@ubuntu:~/tmp$ ldd example2_ora
        linux-gate.so.1 =>  (0xb7749000)
        liblixacmt.so.0 => /opt/lixa/lib/liblixacmt.so.0 (0xb772f000)
        libclntsh.so.10.1 => /usr/lib/oracle/xe/app/oracle/product/10.2.0/server/lib/libclntsh.so.10.1 (0xb697b000)
        libnnz10.so => /usr/lib/oracle/xe/app/oracle/product/10.2.0/server/lib/libnnz10.so (0xb6775000)
        libc.so.6 => /lib/tls/i686/cmov/libc.so.6 (0xb6621000)
        libgmodule-2.0.so.0 => /usr/lib/libgmodule-2.0.so.0 (0xb661d000)
        libdl.so.2 => /lib/tls/i686/cmov/libdl.so.2 (0xb6619000)
        libgthread-2.0.so.0 => /usr/lib/libgthread-2.0.so.0 (0xb6614000)
        librt.so.1 => /lib/tls/i686/cmov/librt.so.1 (0xb660a000)
        libglib-2.0.so.0 => /usr/lib/libglib-2.0.so.0 (0xb6559000)
        libxml2.so.2 => /usr/lib/libxml2.so.2 (0xb6439000)
        liblixabmt.so.0 => /opt/lixa/lib/liblixabmt.so.0 (0xb6426000)
        libpthread.so.0 => /lib/tls/i686/cmov/libpthread.so.0 (0xb640e000)
        libm.so.6 => /lib/tls/i686/cmov/libm.so.6 (0xb63e9000)
        libnsl.so.1 => /lib/tls/i686/cmov/libnsl.so.1 (0xb63d0000)
        /lib/ld-linux.so.2 (0xb774a000)
        libpcre.so.3 => /usr/lib/libpcre.so.3 (0xb63a9000)
        libz.so.1 => /usr/lib/libz.so.1 (0xb6394000)
        libuuid.so.1 => /lib/libuuid.so.1 (0xb6390000)
	</screen>
	Set-up the necessary environment variables:
	<screen>
tiian@ubuntu:~/tmp$ echo $LIXA_PROFILE

tiian@ubuntu:~/tmp$ export LIXA_PROFILE=ORA_DYN
tiian@ubuntu:~/tmp$ echo $LIXA_PROFILE
ORA_DYN

tiian@ubuntu:~/tmp$ echo $ORACLE_HOME

tiian@ubuntu:~/tmp$ export ORACLE_HOME=/usr/lib/oracle/xe/app/oracle/product/10.2.0/server
tiian@ubuntu:~/tmp$ echo $ORACLE_HOME
/usr/lib/oracle/xe/app/oracle/product/10.2.0/server

tiian@ubuntu:~/tmp$ echo $PATH
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
tiian@ubuntu:~/tmp$ export PATH=$PATH:$ORACLE_HOME/bin
tiian@ubuntu:~/tmp$ echo $PATH
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/lib/oracle/xe/app/oracle/product/10.2.0/server/bin

tiian@ubuntu:~/tmp$ echo $ORACLE_SID

tiian@ubuntu:~/tmp$ export ORACLE_SID=XE
tiian@ubuntu:~/tmp$ echo $ORACLE_SID
XE
	</screen>
	It is suggested to set the necessary environment variables in your 
	profile if you are going to execute the programs many times.
	This is the list of the suggested variables:
	<varname>LD_LIBRARY_PATH</varname>,
	<varname>LIXA_PROFILE</varname>,
	<varname>ORACLE_HOME</varname>,
	<varname>ORACLE_SID</varname>,
	<varname>PATH</varname>.
      </para>
    </section>
    <section>
      <title>Check the data table before execution</title>
      <para>
	Execute the below commands using  
	<systemitem class="username">oracle</systemitem>
	user:
	<screen>
oracle@ubuntu:~$ sqlplus "hr/hr"

SQL*Plus: Release 10.2.0.1.0 - Production on Thu Apr 14 22:04:55 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> select * from COUNTRIES where COUNTRY_ID = 'RS';

no rows selected

SQL> exit
Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	</screen>
	That's OK because the table does not contain the row we 
	are going to insert.
      </para>
    </section>
    <section>
      <title>Some checks before program execution</title>
      <para>
	We set <varname>LIXA_PROFILE</varname> to value
	<quote>ORA_DYN</quote>, looking at
	<filename>/opt/lixa/etc/lixac_conf.xml</filename>:
	<screen>
    &lt;profile name="ORA_DYN"&gt;
      &lt;sttsrvs&gt;
        &lt;sttsrv&gt;local_1&lt;/sttsrv&gt;
      &lt;/sttsrvs&gt;
      &lt;rsrmgrs&gt;
        &lt;rsrmgr&gt;OracleXE_dynreg&lt;/rsrmgr&gt;
      &lt;/rsrmgrs&gt;
    &lt;/profile&gt;
	</screen>
	the profile references the Resource Manager named
	<quote>OracleXE_dynreg</quote>, looking again at the config file:
	<screen>
    &lt;rsrmgr name="OracleXE_dynreg" switch_file="/opt/lixa/lib/switch_oracle_dynreg.so" xa_open_info="Oracle_XA+Acc=P/hr/hr+SesTm=30+LogDir=/tmp+threads=true+DbgFl=7+Loose_Coupling=true" xa_close_info="" /&gt;
	</screen>
	we can discover that our application will access the Oracle
	database using <systemitem class="username">hr</systemitem>
	user and writing the trace file to directory <filename>/tmp</filename>
	(see <constant>LogDir</constant>)
	<footnote><para>
	    The content of <constant>xa_open_info</constant> string are
	    described in chapter 15 "Developing Applications with Oracle XA"
	    of the "Oracle Database Application Developer's Guide"
	    manual; please refer to the documentation published by
	    Oracle Corporation for further details.
	</para></footnote>. Verify no trace file exists:
	<screen>
tiian@ubuntu:~/tmp$ ls -la /tmp/xa*
ls: cannot access /tmp/xa*: No such file or directory
	</screen>
      </para>
    </section>
    <section>
      <title>Program execution (dynamic registration)</title>
      <para>
	Execute the client program as shown below:
	<screen>
tiian@ubuntu:~/tmp$ ./example2_ora
INSERT statement executed!
First arg is not 'DELETE', bypassing DELETE statement...
	</screen>
	Check the table after program execution:
	<screen>
tiian@ubuntu:~/tmp$ sqlplus "hr/hr"

SQL*Plus: Release 10.2.0.1.0 - Production on Sun Apr 10 10:34:23 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> select * from COUNTRIES where COUNTRY_ID = 'RS';

CO COUNTRY_NAME                              REGION_ID
-- ---------------------------------------- ----------
RS Repubblica San Marino                             1

SQL> exit
Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	</screen>
	The example program <filename>example2_ora</filename> inserted a
	row in table <constant>COUNTRIES</constant>. Take a look to the
	trace produced by the Oracle client library:
	<screen>
tiian@ubuntu:~/tmp$ ls -la /tmp/xa*
-rw-r--r-- 1 tiian tiian 1723 2011-04-10 10:33 /tmp/xa_NULL04102011.trc
tiian@ubuntu:~/tmp$ cat /tmp/xa_NULL04102011.trc

ORACLE XA: Version 10.2.0.1.0. RM name = 'Oracle_XA'.

103352.5300.3057182448.0:
xaoopen: xa_info=Oracle_XA+Acc=P/hr/hr+SesTm=30+LogDir=/tmp+threads=true+DbgFl=7+Loose_Coupling=true,rmid=0,flags=0x0

103352.5300.3057182448.0:
xaolgn_help: version#: 169869568 banner: Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

103352.5300.3057182448.0:
xaolgn: sqlxrc/sqlxss completed

103352.5300.3057182448.0:
xaolgn2: return XA_OK

103352.5300.3057182448.0:
xaoopen: xaolgn completed

103352.5300.3057182448.0:
xaoopen: return 0

103352.5300.3057182448.0:
ax_reg: xid=0x494c4158-8c6122ac9fd0477ebfe5f650e21a3539-a154ad9214d0544a3abbd33c8c2ba36f, rmid=0, flags=0x0

103352.5300.3057182448.0:
OCITransStart: Attempting

103352.5300.3057182448.0:
OCITransStart: Succeeded

103352.5300.3057182448.0:
xaodynpo 2: rmid=0, state=3

103352.5300.3057182448.0:
xaoend: xid=0x494c4158-8c6122ac9fd0477ebfe5f650e21a3539-a154ad9214d0544a3abbd33c8c2ba36f, rmid=0, flags=0x4000000

103352.5300.3057182448.0:
OCITransDetach: Attempting

103352.5300.3057182448.0:
OCITransDetach: Succeeded

103352.5300.3057182448.0:
xaoend: return 0

103352.5300.3057182448.0:
xaocommit: xid=0x494c4158-8c6122ac9fd0477ebfe5f650e21a3539-a154ad9214d0544a3abbd33c8c2ba36f, rmid=0, flags=0x40000000

103352.5300.3057182448.0:
OCITransCommit: Attempting

103352.5300.3057182448.0:
xaodynpo 2: rmid=0, state=1

103352.5300.3057182448.0:
OCITransCommit: Succeeded

103352.5300.3057182448.0:
xaocommit: rtn 0

103352.5300.3057182448.0:
xaoclose: xa_info=, rmid=0, flags=0x0

103352.5300.3057182448.0:
OCIServerDetach: Attempting

103352.5300.3057182448.0:
OCIServerDetach: Succeeded

103352.5300.3057182448.0:
xaoclose: rtn 0
	</screen>
	The <function>ax_reg</function> function was called because the
	dynamic registration configuration was used 
	(<constant>LIXA_PROFILE=ORA_DYN</constant>). 
	Now you can remove
	the inserted record using the same program:
	<screen>
tiian@ubuntu:~/tmp$ ./example2_ora delete
First arg is 'delete', bypassing INSERT statement...
DELETE statement executed!
	</screen>
	Check the content of the table again:
	<screen>
tiian@ubuntu:~/tmp$ sqlplus "hr/hr"

SQL*Plus: Release 10.2.0.1.0 - Production on Sun Apr 10 10:40:25 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> select * from COUNTRIES where COUNTRY_ID = 'RS';

no rows selected

SQL> exit
Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	</screen>
	The row was deleted. Please remove the trace file before a new
	execution:
	<screen>
tiian@ubuntu:~/tmp$ rm /tmp/xa_NULL04102011.trc
	</screen>
      </para>
    </section>
    <section>
      <title>Program execution (dynamic registration)</title>
      <para>
	Switch from dynamic registration to static registration:
	<screen>
tiian@ubuntu:~/tmp$ echo $LIXA_PROFILE
ORA_DYN
tiian@ubuntu:~/tmp$ export LIXA_PROFILE=ORA_STA
tiian@ubuntu:~/tmp$ echo $LIXA_PROFILE
ORA_STA
	</screen>
	Execute the program again:
	<screen>
tiian@ubuntu:~/tmp$ ./example2_ora
INSERT statement executed!
First arg is not 'DELETE', bypassing DELETE statement...
tiian@ubuntu:~/tmp$ sqlplus "hr/hr"

SQL*Plus: Release 10.2.0.1.0 - Production on Sun Apr 10 10:53:05 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> select * from COUNTRIES where COUNTRY_ID = 'RS';

CO COUNTRY_NAME                              REGION_ID
-- ---------------------------------------- ----------
RS Repubblica San Marino                             1

SQL> exit
Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	</screen>
	Inspect the produced trace file:
	<screen>
tiian@ubuntu:~/tmp$ ls -la /tmp/xa_*
-rw-r--r-- 1 tiian tiian 1661 2011-04-10 10:52 /tmp/xa_NULL04102011.trc
tiian@ubuntu:~/tmp$ cat /tmp/xa_NULL04102011.trc

ORACLE XA: Version 10.2.0.1.0. RM name = 'Oracle_XA'.

105236.5392.3057456880.0:
xaoopen: xa_info=Oracle_XA+Acc=P/hr/hr+SesTm=30+LogDir=/tmp+threads=true+DbgFl=7+Loose_Coupling=true,rmid=0,flags=0x0

105236.5392.3057456880.0:
xaolgn_help: version#: 169869568 banner: Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

105236.5392.3057456880.0:
xaolgn: sqlxrc/sqlxss completed

105236.5392.3057456880.0:
xaolgn: return XA_OK

105236.5392.3057456880.0:
xaoopen: xaolgn completed

105236.5392.3057456880.0:
xaoopen: return 0

105236.5392.3057456880.0:
xaostart: xid=0x494c4158-6119154810784a87b0d0aa83ea497a72-55263ef9237e27f8ae34f46936ce295d, rmid=0, flags=0x0

105236.5392.3057456880.0:
OCITransStart: Attempting

105236.5392.3057456880.0:
OCITransStart: Succeeded

105236.5392.3057456880.0:
xaostart: return XA_OK

105236.5392.3057456880.0:
xaoend: xid=0x494c4158-6119154810784a87b0d0aa83ea497a72-55263ef9237e27f8ae34f46936ce295d, rmid=0, flags=0x4000000

105236.5392.3057456880.0:
OCITransDetach: Attempting

105236.5392.3057456880.0:
OCITransDetach: Succeeded

105236.5392.3057456880.0:
xaoend: return 0

105236.5392.3057456880.0:
xaocommit: xid=0x494c4158-6119154810784a87b0d0aa83ea497a72-55263ef9237e27f8ae34f46936ce295d, rmid=0, flags=0x40000000

105236.5392.3057456880.0:
OCITransCommit: Attempting

105236.5392.3057456880.0:
OCITransCommit: Succeeded

105236.5392.3057456880.0:
xaocommit: rtn 0

105236.5392.3057456880.0:
xaoclose: xa_info=, rmid=0, flags=0x0

105236.5392.3057456880.0:
OCIServerDetach: Attempting

105236.5392.3057456880.0:
OCIServerDetach: Succeeded

105236.5392.3057456880.0:
xaoclose: rtn 0
	</screen>
	The <function>xa_start (xaostart)</function> function was called 
	because the static registration configuration was used 
	(<constant>LIXA_PROFILE=ORA_STA</constant>). 
	Remove the inserted row again:
	<screen>
tiian@ubuntu:~/tmp$ ./example2_ora delete
First arg is 'delete', bypassing INSERT statement...
DELETE statement executed!
tiian@ubuntu:~/tmp$ sqlplus "hr/hr"

SQL*Plus: Release 10.2.0.1.0 - Production on Sun Apr 10 11:01:32 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> select * from COUNTRIES where COUNTRY_ID = 'RS';

no rows selected

SQL> exit
Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	</screen>
	You successfully executed a program that uses Oracle Database Server
	as a Resource Manager.
      </para>
    </section>
  </section>
</chapter>
