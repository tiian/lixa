<chapter>
  <title>Development</title>
  <para>
    This chapter explains how you can develop your own application
    using the libraries and the tools supplied by LIXA project.
  </para>
  <para>
    LIXA project ships some example C programs you can find in directory
    <filename>/opt/lixa/share/doc/lixa-X.Y.Z/examples/</filename> after
    software installation (see <xref linkend="Installation"/>).
  </para>
  <section>
    <title>The first example</title>
    <figure xml:id="develop1">
      <title>Deploy model of an example with two dummy resource managers</title>
      <mediaobject>
	<imageobject>
	  <imagedata fileref="LIXA_Development_1.png"/>
	</imageobject>
      </mediaobject>
    </figure>
    <para>
      Create a working directory in a place you are comfortable with:
      <screen>
tiian@ubuntu:~$ cd
tiian@ubuntu:~$ mkdir tmp
tiian@ubuntu:~$ cd tmp
tiian@ubuntu:~/tmp$
      </screen>
    </para>
    <para>
      Copy file <filename>example1.c</filename> in your working dir:
      <screen>
tiian@ubuntu:~/tmp$ cp /opt/lixa/share/doc/lixa-X.Y.Z/examples/example1.c .
      </screen>
      Substitute <quote>lixa-X.Y.Z</quote> with the actual version of
      the software you installed.
    </para>
    <para>
      Compile and link the C example program:
      <screen>
tiian@ubuntu:~/tmp$ gcc example1.c -Wall -I /opt/lixa/include/ -L /opt/lixa/lib/ -l lixacmt -o example1
      </screen>
      Check the output of the linker:
      <screen>
tiian@ubuntu:~/tmp$ ldd example1
        linux-gate.so.1 =>  (0xb77a9000)
        liblixacmt.so.0 => not found
        libc.so.6 => /lib/tls/i686/cmov/libc.so.6 (0xb7653000)
        /lib/ld-linux.so.2 (0xb77aa000)
      </screen>
      <filename>liblixacmt.so.0</filename> library is not resolved because
      the LIXA libraries are not in system standard library path. You can
      bypass the issue exporting <varname>LD_LIBRARY_PATH</varname>
      variable and checking it again:
      <screen>
tiian@ubuntu:~/tmp$ export LD_LIBRARY_PATH=/opt/lixa/lib
tiian@ubuntu:~/tmp$ ldd example1
        linux-gate.so.1 =>  (0xb773f000)
        liblixacmt.so.0 => /opt/lixa/lib/liblixacmt.so.0 (0xb7724000)
        libc.so.6 => /lib/tls/i686/cmov/libc.so.6 (0xb75d0000)
        libgmodule-2.0.so.0 => /usr/lib/libgmodule-2.0.so.0 (0xb75cb000)
        libdl.so.2 => /lib/tls/i686/cmov/libdl.so.2 (0xb75c7000)
        libgthread-2.0.so.0 => /usr/lib/libgthread-2.0.so.0 (0xb75c2000)
        librt.so.1 => /lib/tls/i686/cmov/librt.so.1 (0xb75b9000)
        libglib-2.0.so.0 => /usr/lib/libglib-2.0.so.0 (0xb7508000)
        libxml2.so.2 => /usr/lib/libxml2.so.2 (0xb73e8000)
        liblixabmt.so.0 => /opt/lixa/lib/liblixabmt.so.0 (0xb73d4000)
        libpthread.so.0 => /lib/tls/i686/cmov/libpthread.so.0 (0xb73bc000)
        /lib/ld-linux.so.2 (0xb7740000)
        libpcre.so.3 => /usr/lib/libpcre.so.3 (0xb7395000)
        libz.so.1 => /usr/lib/libz.so.1 (0xb7380000)
        libm.so.6 => /lib/tls/i686/cmov/libm.so.6 (0xb735b000)
        libuuid.so.1 => /lib/libuuid.so.1 (0xb7356000)
      </screen>
      Now you are ready to start your first application:
      <screen>
tiian@ubuntu:~/tmp$ ./example1
tx_open(): -7
      </screen>
      The <function>tx_open()</function> function returned the value 
      <quote>-7</quote> (<constant>TX_FAIL</constant>) 
      because the state server is not running.
      Start the state server (see <xref linkend="Background_execution"/>)
      and try again:
      <screen>
tiian@ubuntu:~/tmp$ sudo su - lixa
lixa@ubuntu:~$ /opt/lixa/sbin/lixad --daemon
lixa@ubuntu:~$ exit
logout
tiian@ubuntu:~/tmp$ ps -ef|grep lixad|grep -v grep
lixa     12866     1  0 21:35 ?        00:00:00 /opt/lixa/sbin/lixad --daemon
tiian@ubuntu:~/tmp$ export LD_LIBRARY_PATH=/opt/lixa/lib
tiian@ubuntu:~/tmp$ ./example1
tx_open(): 0
tx_begin(): 0
tx_commit(): 0
tx_begin(): 0
tx_rollback(): 0
tx_close(): 0
      </screen>
      Your first program has connected to the state server and has performed
      two dummy distributed transactions: <emphasis>commit</emphasis> and 
      <emphasis>rollback</emphasis>.
    </para>
    <section>
      <title>Some details about the example</title>
      <para>
	You have not specified a specific profile:
	<screen>
tiian@ubuntu:~/tmp$ echo $LIXA_PROFILE

	</screen>
	The LIXA client library used the default one, the first listed in
	<filename>etc/lixac_conf.xml</filename>. If you inspected the 
	configuration file <filename>/opt/lixa/etc/lixac_conf.xml</filename> 
	you would see something like this:
	<screen>
tiian@ubuntu:~/tmp$ cat /opt/lixa/etc/lixac_conf.xml
&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;client&gt;
  &lt;sttsrvs&gt;
    &lt;sttsrv name="local_1" domain="AF_INET" address="127.0.0.1" port="2345" /&gt;
[...]
    &lt;rsrmgr name="LIXAdummyRM" switch_file="/opt/lixa/lib/switch_lixa_dummyrm.so" xa_open_info="dummy open string" xa_close_info="dummy close string" /&gt;
[...]
  &lt;profiles&gt;
    &lt;profile name="CF05"&gt;
      &lt;sttsrvs&gt;
        &lt;sttsrv&gt;local_1&lt;/sttsrv&gt;
      &lt;/sttsrvs&gt;
      &lt;rsrmgrs&gt;
        &lt;rsrmgr&gt;LIXAdummyRM&lt;/rsrmgr&gt;
        &lt;rsrmgr&gt;LIXAdummyRM&lt;/rsrmgr&gt;
      &lt;/rsrmgrs&gt;
    &lt;/profile&gt;
    &lt;profile name="GT71"&gt;
[...]
  &lt;/profiles&gt;
&lt;/client&gt;
	</screen>
	The default profile is named <quote>CF05</quote> and lists two
	resource managers of the same type: <quote>LIXAdummyRM</quote>;
	the related switch file is the file 
	<filename>/opt/lixa/lib/switch_lixa_dummyrm.so</filename>.
	The dummy resource managers supplied by the LIXA project is
	a special trivial resource managers: it ever returns
	<constant>XA_OK</constant>. If you are interested in LIXA dummy
	Resource Manager implementation, take a look to the source file
	<filename>src/client/switch/lixa/lixa_dummyrm.c</filename>.
	To verify that the program is using the dummy resource manager,
	execute it with <varname>LIXA_TRACE_MASK</varname> environment
	variable set to <constant>0x00008000</constant>:
	<screen>
tiian@ubuntu:~/tmp$ export LIXA_TRACE_MASK=0x00008000
tiian@ubuntu:~/tmp$ ./example1
[...]
2011-04-05 22:07:59.953844 [29359/3073444096] client_config_load_switch
2011-04-05 22:07:59.953875 [29359/3073444096] client_config_load_switch: resource manager # 0, name='LIXAdummyRM', switch_file='/opt/lixa/lib/switch_lixa_dummyrm.so'
2011-04-05 22:07:59.954220 [29359/3073444096] client_config_load_switch: module address 0x804e410, function lixa_get_xa_switch found at address 0xb76dd790
2011-04-05 22:07:59.954254 [29359/3073444096] client_config_load_switch: lixa_getxa_switch()->name = 'lixa_dummyrm', lixa_get_xa_switch()->flags = 0
2011-04-05 22:07:59.954279 [29359/3073444096] client_config_load_switch: resource manager dynamically registers: false
2011-04-05 22:07:59.954302 [29359/3073444096] client_config_load_switch: resource manager does not support association migration: false
2011-04-05 22:07:59.954325 [29359/3073444096] client_config_load_switch: resource manager supports asynchronous operations: false
2011-04-05 22:07:59.954348 [29359/3073444096] client_config_load_switch: resource manager # 1, name='LIXAdummyRM', switch_file='/opt/lixa/lib/switch_lixa_dummyrm.so'
2011-04-05 22:07:59.954379 [29359/3073444096] client_config_load_switch: module address 0x804e410, function lixa_get_xa_switch found at address 0xb76dd790
2011-04-05 22:07:59.954405 [29359/3073444096] client_config_load_switch: lixa_getxa_switch()->name = 'lixa_dummyrm', lixa_get_xa_switch()->flags = 0
2011-04-05 22:07:59.954429 [29359/3073444096] client_config_load_switch: resource manager dynamically registers: false
2011-04-05 22:07:59.954451 [29359/3073444096] client_config_load_switch: resource manager does not support association migration: false
2011-04-05 22:07:59.954474 [29359/3073444096] client_config_load_switch: resource manager supports asynchronous operations: false
[...]
tx_open(): 0
tx_begin(): 0
tx_commit(): 0
tx_begin(): 0
tx_rollback(): 0
2011-04-05 22:08:00.128531 [29359/3073444096] client_unconfig
2011-04-05 22:08:00.128883 [29359/3073444096] client_unconfig: acquiring exclusive mutex
2011-04-05 22:08:00.129174 [29359/3073444096] client_config_unload_switch
2011-04-05 22:08:00.129399 [29359/3073444096] client_config_unload_switch: resource manager # 0, defined in config as 'LIXAdummyRM', module address 0x804e410, xa_switch->name='lixa_dummyrm', xa_switch->flags=0
2011-04-05 22:08:00.129594 [29359/3073444096] client_config_unload_switch: resource manager # 1, defined in config as 'LIXAdummyRM', module address 0x804e410, xa_switch->name='lixa_dummyrm', xa_switch->flags=0
2011-04-05 22:08:00.129852 [29359/3073444096] client_config_unload_switch/excp=1/ret_cod=0/errno=0
2011-04-05 22:08:00.130024 [29359/3073444096] client_unconfig/xmlCleanupParser
2011-04-05 22:08:00.130215 [29359/3073444096] client_unconfig: releasing exclusive mutex
2011-04-05 22:08:00.130371 [29359/3073444096] client_unconfig/excp=2/ret_cod=0/errno=0
tx_close(): 0
	</screen>
      </para>
    </section>
  </section>
  <section>
    <title>An example with a <quote>real</quote> Resource Manager (Oracle DBMS)</title>
    <figure xml:id="develop2">
      <title>Deploy model of an example with Oracle Database Server</title>
      <mediaobject>
	<imageobject>
	  <imagedata fileref="LIXA_Development_2.png"/>
	</imageobject>
      </mediaobject>
    </figure>
    <para>
      Using a real Resource Manager, like a DBMS, requires some extra effort
      because you have to set-up the environment needed by the Resource
      Manager. The example explained in this section was developed using
      Oracle Database 10g Release 2 (10.2) Express Edition: if you used 
      a different version, you might need to fix some of the details 
      showed by this example.
      <important><para>
	  If you did not yet installed the software provided by Oracle,
	  please refer to the official Oracle site to download the
	  software and to pick-up the information necessary to install 
	  and configure
	  the database. This manual does not give you information related
	  to Oracle technology: it is assumed you already installed and
	  configured the database.
      </para></important>
      The LIXA software must be configured to support the Oracle Database
      Server resource manager as explained in 
      <xref linkend="Linking_third_party_resource_managers"/>.
    </para>
    <section>
      <title>Set-up Oracle environment</title>
      <section>
	<title>Start-up the Oracle server</title>
	<para>
	  If the database server was not running, you could start it
	  with these commands:
	  <screen>
tiian@ubuntu:~/tmp$ sudo /etc/init.d/oracle-xe enable
tiian@ubuntu:~/tmp$ sudo /etc/init.d/oracle-xe start
Starting Oracle Net Listener.
Starting Oracle Database 10g Express Edition Instance.

	  </screen>
	</para>
      </section>
      <section>
	<title>Create the XA related views</title>
	<note><para>
	    The steps explained below might be not necessary with some
	    versions of the Oracle software, but they are necessary
	    with Oracle XE 10.2.0.1.
	</para></note>
	<para>
	  First of all you must be able to connect as <quote>SYSDBA</quote>
	  from a terminal session; the commands below show what happens when
	  I connect to the Oracle server using the user 
	  <systemitem class="username">sys</systemitem> with password
	  <quote>oracle</quote>:
	  <screen>
tiian@ubuntu:~$ sudo su - oracle
/usr/lib/oracle/xe/app/oracle/product/10.2.0/server/bin/nls_lang.sh: 114: [[: not found
/usr/lib/oracle/xe/app/oracle/product/10.2.0/server/bin/nls_lang.sh: 114: [[: not found
oracle@ubuntu:~$ echo $ORACLE_HOME
/usr/lib/oracle/xe/app/oracle/product/10.2.0/server
oracle@ubuntu:~$ sqlplus "sys/oracle as sysdba"

SQL*Plus: Release 10.2.0.1.0 - Production on Thu Apr 7 22:23:56 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> exit
Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	  </screen>
	  You must check the file <filename>xaview.sql</filename>:
	  <screen>
oracle@ubuntu:~$ ls -la $ORACLE_HOME/rdbms/admin/xaview.sql
-rw-r--r-- 1 oracle dba 1754 2006-02-24 06:18 /usr/lib/oracle/xe/app/oracle/product/10.2.0/server/rdbms/admin/xaview.sql
	  </screen>
	  It contains the SQL instructions necessary to create two specific
	  system views that could be not defined in your database; the
	  following commands are related to a database that contains
	  the desired views:
	  <screen>
oracle@ubuntu:~$ sqlplus "sys/oracle as sysdba"

SQL*Plus: Release 10.2.0.1.0 - Production on Thu Apr 7 22:32:45 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> select * from v$pending_xatrans$;

no rows selected

SQL> select * from v$xatrans$;

no rows selected

SQL> exit
Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	  </screen>
	  If the command failed the views would be not defined; you can
	  create them with a command like this:
	  <screen>
oracle@ubuntu:~$ cat $ORACLE_HOME/rdbms/admin/xaview.sql | sqlplus "sys/oracle as sysdba"

SQL*Plus: Release 10.2.0.1.0 - Production on Thu Apr 7 22:37:06 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL>
View dropped.

SQL>
View dropped.

SQL> SQL> SQL>   2    3    4    5    6    7    8
View created.

SQL> SQL> SQL> SQL>   2    3    4    5    6    7    8    9   10   11
View created.

SQL> SQL> SQL> Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	  </screen>
	</para>
      </section>
      <section>
	<title>Authorize the XA related views</title>
	<para>
	  The example programs supplied by the LIXA project are designed
	  to use the 
	  <systemitem class="username">hr</systemitem> user; you 
	  <emphasis>must</emphasis> grant
	  the necessary privileges to all the users you want to use for
	  your Application Programs. The below commands show how to grant
	  the necessary privileges to
	  <systemitem class="username">hr</systemitem>:
	  <screen>
oracle@ubuntu:~$ sqlplus "sys/oracle as sysdba"

SQL*Plus: Release 10.2.0.1.0 - Production on Thu Apr 7 22:44:44 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> grant select on dba_pending_transactions to hr;

Grant succeeded.

SQL> grant select on v$pending_xatrans$ to hr;

Grant succeeded.

SQL> grant select on v$xatrans$ to hr;

Grant succeeded.

SQL> exit
Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	  </screen>
	</para>
	<note><para>
	    If the user
	    <systemitem class="username">hr</systemitem> did not exist and
	    the above commands failed,
	    you should read Oracle documentation and pick-up the necessary
	    information to create it.
	</para></note>
      </section>
      <section>
	<title>Unlock <quote><systemitem class="username">hr</systemitem></quote> Oracle user</title>
	<para>
	  The example programs supplied by the LIXA project are designed
	  to use the 
	  <systemitem class="username">hr</systemitem> user; it might be 
	  <emphasis>locked</emphasis> after Oracle software installation.
	  The below commands show how to unlock it:
	  <screen>
oracle@ubuntu:~$ sqlplus "sys/oracle as sysdba"

SQL*Plus: Release 10.2.0.1.0 - Production on Thu Apr 7 22:44:44 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> alter user hr account unlock;

User altered.

SQL> exit
Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	  </screen>
	  You may perform the same operation using the graphical (web based)
	  interface.
	</para>
      </section>
    </section>
    <section>
      <title>Start the LIXA state server</title>
      <para>
	Start the state server as shown below:
	<screen>
tiian@ubuntu:~$ sudo su - lixa
lixa@ubuntu:~$ /opt/lixa/sbin/lixad --daemon
lixa@ubuntu:~$ exit
logout
tiian@ubuntu:~$ ps -ef|grep lixad|grep -v grep
lixa     12866     1  0 21:35 ?        00:00:00 /opt/lixa/sbin/lixad --daemon
	</screen>
      </para>
    </section>
    <section>
      <title>Build the client program</title>
      <para>
	Prepare the client (Application Program) using the below commands:
	<screen>
tiian@ubuntu:~$ mkdir tmp
tiian@ubuntu:~$ cd tmp
tiian@ubuntu:~/tmp$ cp /opt/lixa/share/doc/lixa-X.Y.Z/examples/example2_ora.c .
tiian@ubuntu:~/tmp$ gcc example2_ora.c -Wall -I /opt/lixa/include/ -L /opt/lixa/lib/ -l lixacmt -I /usr/lib/oracle/xe/app/oracle/product/10.2.0/server/rdbms/public -L /usr/lib/oracle/xe/app/oracle/product/10.2.0/server/lib -l clntsh -l nnz10 -o example2_ora
	</screen>
	Verify the executable produced by <command>gcc</command>:
	<screen>
tiian@ubuntu:~/tmp$ ldd example2_ora
        linux-gate.so.1 =>  (0xb776d000)
        liblixacmt.so.0 => not found
        libclntsh.so.10.1 => not found
        libnnz10.so => not found
        libc.so.6 => /lib/tls/i686/cmov/libc.so.6 (0xb7616000)
        /lib/ld-linux.so.2 (0xb776e000)
	</screen>
      </para>
    </section>
    <section>
      <title>Set-up LIXA environment</title>
      <para>
	There are three unresolved references that can be fixed setting up
	the environment properly:
	<screen>
tiian@ubuntu:~/tmp$ echo $LD_LIBRARY_PATH

tiian@ubuntu:~/tmp$ export LD_LIBRARY_PATH=/usr/lib/oracle/xe/app/oracle/product/10.2.0/server/lib:/opt/lixa/lib

tiian@ubuntu:~/tmp$ echo $LD_LIBRARY_PATH
/usr/lib/oracle/xe/app/oracle/product/10.2.0/server/lib:/opt/lixa/lib
	</screen>
	Check again the executable:
	<screen>
tiian@ubuntu:~/tmp$ ldd example2_ora
        linux-gate.so.1 =>  (0xb7749000)
        liblixacmt.so.0 => /opt/lixa/lib/liblixacmt.so.0 (0xb772f000)
        libclntsh.so.10.1 => /usr/lib/oracle/xe/app/oracle/product/10.2.0/server/lib/libclntsh.so.10.1 (0xb697b000)
        libnnz10.so => /usr/lib/oracle/xe/app/oracle/product/10.2.0/server/lib/libnnz10.so (0xb6775000)
        libc.so.6 => /lib/tls/i686/cmov/libc.so.6 (0xb6621000)
        libgmodule-2.0.so.0 => /usr/lib/libgmodule-2.0.so.0 (0xb661d000)
        libdl.so.2 => /lib/tls/i686/cmov/libdl.so.2 (0xb6619000)
        libgthread-2.0.so.0 => /usr/lib/libgthread-2.0.so.0 (0xb6614000)
        librt.so.1 => /lib/tls/i686/cmov/librt.so.1 (0xb660a000)
        libglib-2.0.so.0 => /usr/lib/libglib-2.0.so.0 (0xb6559000)
        libxml2.so.2 => /usr/lib/libxml2.so.2 (0xb6439000)
        liblixabmt.so.0 => /opt/lixa/lib/liblixabmt.so.0 (0xb6426000)
        libpthread.so.0 => /lib/tls/i686/cmov/libpthread.so.0 (0xb640e000)
        libm.so.6 => /lib/tls/i686/cmov/libm.so.6 (0xb63e9000)
        libnsl.so.1 => /lib/tls/i686/cmov/libnsl.so.1 (0xb63d0000)
        /lib/ld-linux.so.2 (0xb774a000)
        libpcre.so.3 => /usr/lib/libpcre.so.3 (0xb63a9000)
        libz.so.1 => /usr/lib/libz.so.1 (0xb6394000)
        libuuid.so.1 => /lib/libuuid.so.1 (0xb6390000)
	</screen>
	Set-up the necessary environment variables:
	<screen>
tiian@ubuntu:~/tmp$ echo $LIXA_PROFILE

tiian@ubuntu:~/tmp$ export LIXA_PROFILE=ORA_DYN
tiian@ubuntu:~/tmp$ echo $LIXA_PROFILE
ORA_DYN

tiian@ubuntu:~/tmp$ echo $ORACLE_HOME

tiian@ubuntu:~/tmp$ export ORACLE_HOME=/usr/lib/oracle/xe/app/oracle/product/10.2.0/server
tiian@ubuntu:~/tmp$ echo $ORACLE_HOME
/usr/lib/oracle/xe/app/oracle/product/10.2.0/server

tiian@ubuntu:~/tmp$ echo $PATH
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
tiian@ubuntu:~/tmp$ export PATH=$PATH:$ORACLE_HOME/bin
tiian@ubuntu:~/tmp$ echo $PATH
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/lib/oracle/xe/app/oracle/product/10.2.0/server/bin

tiian@ubuntu:~/tmp$ echo $ORACLE_SID

tiian@ubuntu:~/tmp$ export ORACLE_SID=XE
tiian@ubuntu:~/tmp$ echo $ORACLE_SID
XE
	</screen>
	It is suggested to set the necessary environment variables in your 
	profile if you are going to execute the programs many times.
	This is the list of the suggested variables:
	<varname>LD_LIBRARY_PATH</varname>,
	<varname>LIXA_PROFILE</varname>,
	<varname>ORACLE_HOME</varname>,
	<varname>ORACLE_SID</varname>,
	<varname>PATH</varname>.
      </para>
    </section>
    <section>
      <title>Check the data table before execution</title>
      <para>
	Execute the below commands using  
	<systemitem class="username">oracle</systemitem>
	user:
	<screen>
oracle@ubuntu:~$ sqlplus "hr/hr"

SQL*Plus: Release 10.2.0.1.0 - Production on Thu Apr 14 22:04:55 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> select * from COUNTRIES where COUNTRY_ID = 'RS';

no rows selected

SQL> exit
Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	</screen>
	That's OK because the table does not contain the row we 
	are going to insert.
      </para>
    </section>
    <section>
      <title>Some checks before program execution</title>
      <para>
	We set <varname>LIXA_PROFILE</varname> to value
	<quote>ORA_DYN</quote>, looking at
	<filename>/opt/lixa/etc/lixac_conf.xml</filename>:
	<screen>
    &lt;profile name="ORA_DYN"&gt;
      &lt;sttsrvs&gt;
        &lt;sttsrv&gt;local_1&lt;/sttsrv&gt;
      &lt;/sttsrvs&gt;
      &lt;rsrmgrs&gt;
        &lt;rsrmgr&gt;OracleXE_dynreg&lt;/rsrmgr&gt;
      &lt;/rsrmgrs&gt;
    &lt;/profile&gt;
	</screen>
	the profile references the Resource Manager named
	<quote>OracleXE_dynreg</quote>, looking again at the config file:
	<screen>
    &lt;rsrmgr name="OracleXE_dynreg" switch_file="/opt/lixa/lib/switch_oracle_dynreg.so" xa_open_info="Oracle_XA+Acc=P/hr/hr+SesTm=30+LogDir=/tmp+threads=true+DbgFl=7+Loose_Coupling=true" xa_close_info="" /&gt;
	</screen>
	we can discover that our application will access the Oracle
	database using <systemitem class="username">hr</systemitem>
	user and writing the trace file to directory <filename>/tmp</filename>
	(see <constant>LogDir</constant>)
	<footnote><para>
	    The content of <constant>xa_open_info</constant> string is
	    described in chapter 15 "Developing Applications with Oracle XA"
	    of the "Oracle Database Application Developer's Guide"
	    manual; please refer to the documentation published by
	    Oracle Corporation for further details.
	</para></footnote>. Verify no trace file exists:
	<screen>
tiian@ubuntu:~/tmp$ ls -la /tmp/xa*
ls: cannot access /tmp/xa*: No such file or directory
	</screen>
      </para>
    </section>
    <section>
      <title>Program execution (dynamic registration)</title>
      <para>
	Execute the client program as shown below:
	<screen>
tiian@ubuntu:~/tmp$ ./example2_ora
INSERT statement executed!
First arg is not 'DELETE', bypassing DELETE statement...
	</screen>
	Check the table after program execution:
	<screen>
tiian@ubuntu:~/tmp$ sqlplus "hr/hr"

SQL*Plus: Release 10.2.0.1.0 - Production on Sun Apr 10 10:34:23 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> select * from COUNTRIES where COUNTRY_ID = 'RS';

CO COUNTRY_NAME                              REGION_ID
-- ---------------------------------------- ----------
RS Repubblica San Marino                             1

SQL> exit
Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	</screen>
	The example program <filename>example2_ora</filename> inserted a
	row in table <constant>COUNTRIES</constant>. Take a look to the
	trace produced by the Oracle client library:
	<screen>
tiian@ubuntu:~/tmp$ ls -la /tmp/xa*
-rw-r--r-- 1 tiian tiian 1723 2011-04-10 10:33 /tmp/xa_NULL04102011.trc
tiian@ubuntu:~/tmp$ cat /tmp/xa_NULL04102011.trc

ORACLE XA: Version 10.2.0.1.0. RM name = 'Oracle_XA'.

103352.5300.3057182448.0:
xaoopen: xa_info=Oracle_XA+Acc=P/hr/hr+SesTm=30+LogDir=/tmp+threads=true+DbgFl=7+Loose_Coupling=true,rmid=0,flags=0x0

103352.5300.3057182448.0:
xaolgn_help: version#: 169869568 banner: Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

103352.5300.3057182448.0:
xaolgn: sqlxrc/sqlxss completed

103352.5300.3057182448.0:
xaolgn2: return XA_OK

103352.5300.3057182448.0:
xaoopen: xaolgn completed

103352.5300.3057182448.0:
xaoopen: return 0

103352.5300.3057182448.0:
ax_reg: xid=0x494c4158-8c6122ac9fd0477ebfe5f650e21a3539-a154ad9214d0544a3abbd33c8c2ba36f, rmid=0, flags=0x0

103352.5300.3057182448.0:
OCITransStart: Attempting

103352.5300.3057182448.0:
OCITransStart: Succeeded

103352.5300.3057182448.0:
xaodynpo 2: rmid=0, state=3

103352.5300.3057182448.0:
xaoend: xid=0x494c4158-8c6122ac9fd0477ebfe5f650e21a3539-a154ad9214d0544a3abbd33c8c2ba36f, rmid=0, flags=0x4000000

103352.5300.3057182448.0:
OCITransDetach: Attempting

103352.5300.3057182448.0:
OCITransDetach: Succeeded

103352.5300.3057182448.0:
xaoend: return 0

103352.5300.3057182448.0:
xaocommit: xid=0x494c4158-8c6122ac9fd0477ebfe5f650e21a3539-a154ad9214d0544a3abbd33c8c2ba36f, rmid=0, flags=0x40000000

103352.5300.3057182448.0:
OCITransCommit: Attempting

103352.5300.3057182448.0:
xaodynpo 2: rmid=0, state=1

103352.5300.3057182448.0:
OCITransCommit: Succeeded

103352.5300.3057182448.0:
xaocommit: rtn 0

103352.5300.3057182448.0:
xaoclose: xa_info=, rmid=0, flags=0x0

103352.5300.3057182448.0:
OCIServerDetach: Attempting

103352.5300.3057182448.0:
OCIServerDetach: Succeeded

103352.5300.3057182448.0:
xaoclose: rtn 0
	</screen>
	The <function>ax_reg</function> function was called because the
	dynamic registration configuration was used 
	(<constant>LIXA_PROFILE=ORA_DYN</constant>). 
	Now you can remove
	the inserted record using the same program:
	<screen>
tiian@ubuntu:~/tmp$ ./example2_ora delete
First arg is 'delete', bypassing INSERT statement...
DELETE statement executed!
	</screen>
	Check the content of the table again:
	<screen>
tiian@ubuntu:~/tmp$ sqlplus "hr/hr"

SQL*Plus: Release 10.2.0.1.0 - Production on Sun Apr 10 10:40:25 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> select * from COUNTRIES where COUNTRY_ID = 'RS';

no rows selected

SQL> exit
Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	</screen>
	The row was deleted. Please remove the trace file before a new
	execution:
	<screen>
tiian@ubuntu:~/tmp$ rm /tmp/xa_NULL04102011.trc
	</screen>
      </para>
    </section>
    <section>
      <title>Program execution (static registration)</title>
      <para>
	Switch from dynamic registration to static registration:
	<screen>
tiian@ubuntu:~/tmp$ echo $LIXA_PROFILE
ORA_DYN
tiian@ubuntu:~/tmp$ export LIXA_PROFILE=ORA_STA
tiian@ubuntu:~/tmp$ echo $LIXA_PROFILE
ORA_STA
	</screen>
	Execute the program again:
	<screen>
tiian@ubuntu:~/tmp$ ./example2_ora
INSERT statement executed!
First arg is not 'DELETE', bypassing DELETE statement...
tiian@ubuntu:~/tmp$ sqlplus "hr/hr"

SQL*Plus: Release 10.2.0.1.0 - Production on Sun Apr 10 10:53:05 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> select * from COUNTRIES where COUNTRY_ID = 'RS';

CO COUNTRY_NAME                              REGION_ID
-- ---------------------------------------- ----------
RS Repubblica San Marino                             1

SQL> exit
Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	</screen>
	Inspect the produced trace file:
	<screen>
tiian@ubuntu:~/tmp$ ls -la /tmp/xa_*
-rw-r--r-- 1 tiian tiian 1661 2011-04-10 10:52 /tmp/xa_NULL04102011.trc
tiian@ubuntu:~/tmp$ cat /tmp/xa_NULL04102011.trc

ORACLE XA: Version 10.2.0.1.0. RM name = 'Oracle_XA'.

105236.5392.3057456880.0:
xaoopen: xa_info=Oracle_XA+Acc=P/hr/hr+SesTm=30+LogDir=/tmp+threads=true+DbgFl=7+Loose_Coupling=true,rmid=0,flags=0x0

105236.5392.3057456880.0:
xaolgn_help: version#: 169869568 banner: Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

105236.5392.3057456880.0:
xaolgn: sqlxrc/sqlxss completed

105236.5392.3057456880.0:
xaolgn: return XA_OK

105236.5392.3057456880.0:
xaoopen: xaolgn completed

105236.5392.3057456880.0:
xaoopen: return 0

105236.5392.3057456880.0:
xaostart: xid=0x494c4158-6119154810784a87b0d0aa83ea497a72-55263ef9237e27f8ae34f46936ce295d, rmid=0, flags=0x0

105236.5392.3057456880.0:
OCITransStart: Attempting

105236.5392.3057456880.0:
OCITransStart: Succeeded

105236.5392.3057456880.0:
xaostart: return XA_OK

105236.5392.3057456880.0:
xaoend: xid=0x494c4158-6119154810784a87b0d0aa83ea497a72-55263ef9237e27f8ae34f46936ce295d, rmid=0, flags=0x4000000

105236.5392.3057456880.0:
OCITransDetach: Attempting

105236.5392.3057456880.0:
OCITransDetach: Succeeded

105236.5392.3057456880.0:
xaoend: return 0

105236.5392.3057456880.0:
xaocommit: xid=0x494c4158-6119154810784a87b0d0aa83ea497a72-55263ef9237e27f8ae34f46936ce295d, rmid=0, flags=0x40000000

105236.5392.3057456880.0:
OCITransCommit: Attempting

105236.5392.3057456880.0:
OCITransCommit: Succeeded

105236.5392.3057456880.0:
xaocommit: rtn 0

105236.5392.3057456880.0:
xaoclose: xa_info=, rmid=0, flags=0x0

105236.5392.3057456880.0:
OCIServerDetach: Attempting

105236.5392.3057456880.0:
OCIServerDetach: Succeeded

105236.5392.3057456880.0:
xaoclose: rtn 0
	</screen>
	The <function>xa_start (xaostart)</function> function was called 
	because the static registration configuration was used 
	(<constant>LIXA_PROFILE=ORA_STA</constant>). 
	Remove the inserted row again:
	<screen>
tiian@ubuntu:~/tmp$ ./example2_ora delete
First arg is 'delete', bypassing INSERT statement...
DELETE statement executed!
tiian@ubuntu:~/tmp$ sqlplus "hr/hr"

SQL*Plus: Release 10.2.0.1.0 - Production on Sun Apr 10 11:01:32 2011

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production

SQL> select * from COUNTRIES where COUNTRY_ID = 'RS';

no rows selected

SQL> exit
Disconnected from Oracle Database 10g Express Edition Release 10.2.0.1.0 - Production
	</screen>
	You successfully executed a program that uses Oracle Database Server
	as a Resource Manager.
      </para>
    </section>
  </section>
  <section>
    <title>An example with IBM DB2 DBMS</title>
    <para>
      This example was developed using DB2 Express-C 9.7 for Linux (Ubuntu).
      If you were using a different version you would need to adapt some
      commands to your environment.
    </para>
    <section>
      <title>Start-up the DB2 server</title>
      <para>
	If your server didn't start-up automatically at boot time, you
	could start it with the following commands:
	<screen>
tiian@ubuntu:~$ ps -ef | grep db2 | grep -v grep
tiian@ubuntu:~$ sudo /etc/init.d/db2exc start
  * Starting DAS:                       done.
  * Instance db2inst1 ( db2c_db2inst1 ):        done.
  * Activating database SAMPLE          done.
tiian@ubuntu:~$ ps -ef | grep db2 | grep -v grep
dasusr1  22959     1  0 10:54 pts/2    00:00:00 /home/dasusr1/das/adm/db2dasrrm
root     23190     1  2 10:54 pts/2    00:00:00 db2wdog                         
db2inst1 23192 23190  4 10:54 pts/2    00:00:01 db2sysc                         
root     23193 23192  0 10:54 pts/2    00:00:00 db2ckpwd                        
root     23194 23192  0 10:54 pts/2    00:00:00 db2ckpwd                        
root     23195 23192  0 10:54 pts/2    00:00:00 db2ckpwd                        
db2inst1 23206 23190  2 10:54 pts/2    00:00:00 db2acd   ,0,0,0,1,0,0,0,1,0,8a6614,14,1e014,2,0,1,11fd0,0x12600000,0x12600000,1600000,740002,2,a0800d
	</screen>
	Switch to user <systemitem class="username">db2inst1</systemitem>
	and try to connect to database <quote>SAMPLE</quote>:
	<screen>
tiian@ubuntu:~$ sudo su - db2inst1
db2inst1@ubuntu:~$ db2
(c) Copyright IBM Corporation 1993,2007
Command Line Processor for DB2 Client 9.7.1

You can issue database manager commands and SQL statements from the command
prompt. For example:
    db2 => connect to sample
    db2 => bind sample.bnd

For general help, type: ?.
For command help, type: ? command, where command can be
the first few keywords of a database manager command. For example:
 ? CATALOG DATABASE for help on the CATALOG DATABASE command
 ? CATALOG          for help on all of the CATALOG commands.

To exit db2 interactive mode, type QUIT at the command prompt. Outside
interactive mode, all commands must be prefixed with 'db2'.
To list the current command option settings, type LIST COMMAND OPTIONS.

For more detailed help, refer to the Online Reference Manual.

db2 => connect to sample

   Database Connection Information

 Database server        = DB2/LINUX 9.7.1
 SQL authorization ID   = DB2INST1
 Local database alias   = SAMPLE

	</screen>
	Check the <quote>ORG</quote> table exists and contains some data:
	<screen>
db2 => select * from ORG

DEPTNUMB DEPTNAME       MANAGER DIVISION   LOCATION
-------- -------------- ------- ---------- -------------
      10 Head Office        160 Corporate  New York
      15 New England         50 Eastern    Boston
      20 Mid Atlantic        10 Eastern    Washington
      38 South Atlantic      30 Eastern    Atlanta
      42 Great Lakes        100 Midwest    Chicago
      51 Plains             140 Midwest    Dallas
      66 Pacific            270 Western    San Francisco
      84 Mountain           290 Western    Denver

  8 record(s) selected.

	</screen>
	OK, the <quote>SAMPLE</quote> database is installed and the 
	<quote>ORG</quote> table is
	populated. If something goes wrong, please refer to IBM DB2
	documentation to fix the issues before the next step because
	you will not be able to execute the sample program without a
	basic running installation.
      </para>
    </section>
    <section xml:id="Setting_up_DB2_environment">
      <title>Setting-up DB2 environment</title>
      <para>
	We want to execute our example program with a generic user,
	not just using <systemitem class="username">db2inst1</systemitem>
	because it's the system user dedicated to the database
	instance execution. The commands below explain as the generic
	user <systemitem class="username">tiian</systemitem> (my own 
	user) can be used instead of 
	<systemitem class="username">db2inst1</systemitem>.
      </para>
      <para>
	Grant <constant>DBADM</constant> privilege to the user
	<systemitem class="username">tiian</systemitem>:
	<screen>
db2 => grant DBADM on database to user tiian
DB20000I  The SQL command completed successfully.
	</screen>
	<constant>DBADM</constant> is not the lowest authorization
	level necessary to execute our example, but for the sake of 
	this example it's a <quote>good enought</quote> choice.
      </para>
      <para>
	Add something like the 4 lines below to your
	<filename>$HOME/.profile</filename> or equivalent profile
	configuration:
	<screen>
# The following three lines have been added by IBM DB2 instance utilities.
if [ -f /home/db2inst1/sqllib/db2profile ]; then
    . /home/db2inst1/sqllib/db2profile
fi
	</screen>
	Then login again and check your environment:
	<screen>
tiian@ubuntu:~$ env|grep -i db2
DB2INSTANCE=db2inst1
LD_LIBRARY_PATH=/home/db2inst1/sqllib/lib32
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/home/db2inst1/sqllib/bin:/home/db2inst1/sqllib/adm:/home/db2inst1/sqllib/misc:/home/db2inst1/sqllib/db2tss/bin
CLASSPATH=/home/db2inst1/sqllib/java/db2java.zip:/home/db2inst1/sqllib/java/db2jcc.jar:/home/db2inst1/sqllib/java/sqlj.zip:/home/db2inst1/sqllib/function:/home/db2inst1/sqllib/java/db2jcc_license_cu.jar:.
	</screen>
	As shown above,
	<varname>DB2INSTANCE</varname>, <varname>LD_LIBRARY_PATH</varname>,
	<varname>PATH</varname> variables should refer to DB2 stuff too.
	Connect to the database using your own user instead of
	<systemitem class="username">db2inst1</systemitem>:
	<screen>
tiian@ubuntu:~$ db2
(c) Copyright IBM Corporation 1993,2007
Command Line Processor for DB2 Client 9.7.1

You can issue database manager commands and SQL statements from the command
prompt. For example:
    db2 => connect to sample
    db2 => bind sample.bnd

For general help, type: ?.
For command help, type: ? command, where command can be
the first few keywords of a database manager command. For example:
 ? CATALOG DATABASE for help on the CATALOG DATABASE command
 ? CATALOG          for help on all of the CATALOG commands.

To exit db2 interactive mode, type QUIT at the command prompt. Outside
interactive mode, all commands must be prefixed with 'db2'.
To list the current command option settings, type LIST COMMAND OPTIONS.

For more detailed help, refer to the Online Reference Manual.

db2 => connect to sample

   Database Connection Information

 Database server        = DB2/LINUX 9.7.1
 SQL authorization ID   = TIIAN
 Local database alias   = SAMPLE

db2 => select * from DB2INST1.ORG

DEPTNUMB DEPTNAME       MANAGER DIVISION   LOCATION
-------- -------------- ------- ---------- -------------
      10 Head Office        160 Corporate  New York
      15 New England         50 Eastern    Boston
      20 Mid Atlantic        10 Eastern    Washington
      38 South Atlantic      30 Eastern    Atlanta
      42 Great Lakes        100 Midwest    Chicago
      51 Plains             140 Midwest    Dallas
      66 Pacific            270 Western    San Francisco
      84 Mountain           290 Western    Denver

  8 record(s) selected.

db2 => select * from DB2INST1.DEPT

DEPTNO DEPTNAME                             MGRNO  ADMRDEPT LOCATION
------ ------------------------------------ ------ -------- ----------------
A00    SPIFFY COMPUTER SERVICE DIV.         000010 A00      -
B01    PLANNING                             000020 A00      -
C01    INFORMATION CENTER                   000030 A00      -
D01    DEVELOPMENT CENTER                   -      A00      -
D11    MANUFACTURING SYSTEMS                000060 D01      -
D21    ADMINISTRATION SYSTEMS               000070 D01      -
E01    SUPPORT SERVICES                     000050 A00      -
E11    OPERATIONS                           000090 E01      -
E21    SOFTWARE SUPPORT                     000100 E01      -
F22    BRANCH OFFICE F2                     -      E01      -
G22    BRANCH OFFICE G2                     -      E01      -
H22    BRANCH OFFICE H2                     -      E01      -
I22    BRANCH OFFICE I2                     -      E01      -
J22    BRANCH OFFICE J2                     -      E01      -

  14 record(s) selected.

db2 => quit
DB20000I  The QUIT command completed successfully.
	</screen>	  
      </para>
    </section>
    <section>
      <title>Start the LIXA state server</title>
      <para>
	Start the state server as shown below:
	<screen>
tiian@ubuntu:~$ sudo su - lixa
lixa@ubuntu:~$ /opt/lixa/sbin/lixad --daemon
lixa@ubuntu:~$ exit
logout
tiian@ubuntu:~$ ps -ef|grep lixad|grep -v grep
lixa     12866     1  0 21:35 ?        00:00:00 /opt/lixa/sbin/lixad --daemon
	</screen>
      </para>
    </section>
    <section>
      <title>Build the client program</title>
      <para>
	Prepare the client (Application Program) using the below commands:
	<screen>
tiian@ubuntu:~$ mkdir tmp
tiian@ubuntu:~$ cd tmp
tiian@ubuntu:~/tmp$ cp /opt/lixa/share/doc/lixa-X.Y.Z/examples/example3_db2.c .
tiian@ubuntu:~/tmp$ gcc example3_db2.c -Wall -I /opt/lixa/include/ -L /opt/lixa/lib/ -l lixacmt -I /opt/ibm/db2/V9.7/include/ -L /opt/ibm/db2/V9.7/lib32/ -l db2 -o example3_db2
	</screen>
	Verify the executable produced by <command>gcc</command>:
	<screen>
tiian@ubuntu:~/tmp$ ldd example3_db2
        linux-gate.so.1 =>  (0xb7711000)
        liblixacmt.so.0 => not found
        libdb2.so.1 => /home/db2inst1/sqllib/lib32/libdb2.so.1 (0xb61cf000)
        libc.so.6 => /lib/tls/i686/cmov/libc.so.6 (0xb607f000)
        libcrypt.so.1 => /lib/tls/i686/cmov/libcrypt.so.1 (0xb604d000)
        libdl.so.2 => /lib/tls/i686/cmov/libdl.so.2 (0xb6049000)
        libpthread.so.0 => /lib/tls/i686/cmov/libpthread.so.0 (0xb6030000)
        libpam.so.0 => /lib/libpam.so.0 (0xb6026000)
        libm.so.6 => /lib/tls/i686/cmov/libm.so.6 (0xb6001000)
        libdb2dascmn.so.1 => /home/db2inst1/sqllib/lib32/libdb2dascmn.so.1 (0xb5fd4000)
        libdb2g11n.so.1 => /home/db2inst1/sqllib/lib32/libdb2g11n.so.1 (0xb5966000)
        libdb2genreg.so.1 => /home/db2inst1/sqllib/lib32/libdb2genreg.so.1 (0xb5925000)
        libdb2install.so.1 => /home/db2inst1/sqllib/lib32/libdb2install.so.1 (0xb591a000)
        libdb2locale.so.1 => /home/db2inst1/sqllib/lib32/libdb2locale.so.1 (0xb5907000)
        libdb2osse.so.1 => /home/db2inst1/sqllib/lib32/libdb2osse.so.1 (0xb5602000)
        libdb2osse_db2.so.1 => /home/db2inst1/sqllib/lib32/libdb2osse_db2.so.1 (0xb5592000)
        libdb2trcapi.so.1 => /home/db2inst1/sqllib/lib32/libdb2trcapi.so.1 (0xb557e000)
        libstdc++.so.6 => /usr/lib/libstdc++.so.6 (0xb548b000)
        libgcc_s.so.1 => /lib/libgcc_s.so.1 (0xb5480000)
        /lib/ld-linux.so.2 (0xb7712000)
        librt.so.1 => /lib/tls/i686/cmov/librt.so.1 (0xb5476000)
	</screen>
      </para>
    </section>
    <section>
      <title>Set-up LIXA environment</title>
      <para>
	There is an unresolved reference to liblixacmt: it can be fixed 
	setting up the proper environment:
	<screen>
tiian@ubuntu:~/tmp$ echo $LD_LIBRARY_PATH
/home/db2inst1/sqllib/lib32
tiian@ubuntu:~/tmp$ export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/lixa/lib
tiian@ubuntu:~/tmp$ echo $LD_LIBRARY_PATH
/home/db2inst1/sqllib/lib32:/opt/lixa/lib
	</screen>
	Check again the executable:
	<screen>
tiian@ubuntu:~/tmp$ ldd example3_db2
        linux-gate.so.1 =>  (0xb775f000)
        liblixacmt.so.0 => /opt/lixa/lib/liblixacmt.so.0 (0xb7744000)
        libdb2.so.1 => /home/db2inst1/sqllib/lib32/libdb2.so.1 (0xb6212000)
        libc.so.6 => /lib/tls/i686/cmov/libc.so.6 (0xb60b4000)
        libgmodule-2.0.so.0 => /usr/lib/libgmodule-2.0.so.0 (0xb60b0000)
        libdl.so.2 => /lib/tls/i686/cmov/libdl.so.2 (0xb60ac000)
        libgthread-2.0.so.0 => /usr/lib/libgthread-2.0.so.0 (0xb60a7000)
        librt.so.1 => /lib/tls/i686/cmov/librt.so.1 (0xb609e000)
        libglib-2.0.so.0 => /usr/lib/libglib-2.0.so.0 (0xb5fed000)
        libxml2.so.2 => /usr/lib/libxml2.so.2 (0xb5ecc000)
        liblixabmt.so.0 => /opt/lixa/lib/liblixabmt.so.0 (0xb5eb9000)
        libpthread.so.0 => /lib/tls/i686/cmov/libpthread.so.0 (0xb5ea1000)
        libcrypt.so.1 => /lib/tls/i686/cmov/libcrypt.so.1 (0xb5e6e000)
        libpam.so.0 => /lib/libpam.so.0 (0xb5e64000)
        libm.so.6 => /lib/tls/i686/cmov/libm.so.6 (0xb5e3f000)
        libdb2dascmn.so.1 => /home/db2inst1/sqllib/lib32/libdb2dascmn.so.1 (0xb5e12000)
        libdb2g11n.so.1 => /home/db2inst1/sqllib/lib32/libdb2g11n.so.1 (0xb57a4000)
        libdb2genreg.so.1 => /home/db2inst1/sqllib/lib32/libdb2genreg.so.1 (0xb5763000)
        libdb2install.so.1 => /home/db2inst1/sqllib/lib32/libdb2install.so.1 (0xb5758000)
        libdb2locale.so.1 => /home/db2inst1/sqllib/lib32/libdb2locale.so.1 (0xb5745000)
        libdb2osse.so.1 => /home/db2inst1/sqllib/lib32/libdb2osse.so.1 (0xb5440000)
        libdb2osse_db2.so.1 => /home/db2inst1/sqllib/lib32/libdb2osse_db2.so.1 (0xb53d0000)
        libdb2trcapi.so.1 => /home/db2inst1/sqllib/lib32/libdb2trcapi.so.1 (0xb53bc000)
        libstdc++.so.6 => /usr/lib/libstdc++.so.6 (0xb52c9000)
        libgcc_s.so.1 => /lib/libgcc_s.so.1 (0xb52be000)
        /lib/ld-linux.so.2 (0xb7760000)
        libpcre.so.3 => /usr/lib/libpcre.so.3 (0xb5297000)
        libz.so.1 => /usr/lib/libz.so.1 (0xb5282000)
        libuuid.so.1 => /lib/libuuid.so.1 (0xb527d000)
	</screen>
	Set-up the necessary environment variable:
	<screen>
tiian@ubuntu:~/tmp$ echo $LIXA_PROFILE

tiian@ubuntu:~/tmp$ export LIXA_PROFILE=DB2_DYN
tiian@ubuntu:~/tmp$ echo $LIXA_PROFILE
DB2_DYN
	</screen>
	No additional DB2 variables are needed because they are automatically
	set at login (see <xref linkend="Setting_up_DB2_environment"/>).
      </para>
    </section>
    <section>
      <title>Some checks before program execution</title>
      <para>
	We set <varname>LIXA_PROFILE</varname> to value
	<quote>DB2_DYN</quote>, looking at
	<filename>/opt/lixa/etc/lixac_conf.xml</filename>:
	<screen>
    &lt;profile name="DB2_DYN"&gt;
      &lt;sttsrvs&gt;
        &lt;sttsrv&gt;local_1&lt;/sttsrv&gt;
      &lt;/sttsrvs&gt;
      &lt;rsrmgrs&gt;
        &lt;rsrmgr&gt;IBMDB2_dynreg&lt;/rsrmgr&gt;
      &lt;/rsrmgrs&gt;
    &lt;/profile&gt;
	</screen>
	the profile references the Resource Manager named
	<quote>IBMDB2_dynreg</quote>, looking again at the config file:
	<screen>
    &lt;rsrmgr name="IBMDB2_dynreg" switch_file="/opt/lixa/lib/switch_ibmdb2_dynreg.so" xa_open_info="axlib=/opt/lixa/lib/liblixacmt.so,db=sample,tpm=lixa" xa_close_info="" /&gt;
	</screen>
	we can discover how the DB2 database is configured for XA
	<footnote><para>
	    The content of <constant>xa_open_info</constant> string is
	    documented in IBM Infocenter: search the string
	    <quote>xa_open string formats</quote> in the documentation
	    relevant to your installed version; this is a valid link
	    <link xlink:href="http://publib.boulder.ibm.com/infocenter/db2luw/v9r7/topic/com.ibm.db2.luw.admin.2pc.doc/doc/r0005080.html">
	      http://publib.boulder.ibm.com/infocenter/db2luw/v9r7/topic/com.ibm.db2.luw.admin.2pc.doc/doc/r0005080.html
	    </link>
	    but it may change in the future.
	</para></footnote>.
      </para>
    </section>
    <section>
      <title>Program execution (dynamic registration)</title>
      <para>
	It is suggested to open two different terminals: the first one
	connected to <quote>SAMPLE</quote> DB2 database and the second
	one pointing to the directory where the compiled program
	<filename>example3_db2</filename> lives.
	First teminal session:
	<screen>
tiian@ubuntu:~$ db2
(c) Copyright IBM Corporation 1993,2007
Command Line Processor for DB2 Client 9.7.1

You can issue database manager commands and SQL statements from the command
prompt. For example:
    db2 => connect to sample
    db2 => bind sample.bnd

For general help, type: ?.
For command help, type: ? command, where command can be
the first few keywords of a database manager command. For example:
 ? CATALOG DATABASE for help on the CATALOG DATABASE command
 ? CATALOG          for help on all of the CATALOG commands.

To exit db2 interactive mode, type QUIT at the command prompt. Outside
interactive mode, all commands must be prefixed with 'db2'.
To list the current command option settings, type LIST COMMAND OPTIONS.

For more detailed help, refer to the Online Reference Manual.

db2 => connect to SAMPLE

   Database Connection Information

 Database server        = DB2/LINUX 9.7.1
 SQL authorization ID   = TIIAN
 Local database alias   = SAMPLE

	</screen>
	Second teminal session:
	<screen>
tiian@ubuntu:~/tmp$ ls -la
total 28
drwxr-xr-x  2 tiian tiian  4096 2011-04-22 16:26 .
drwxr-xr-x 40 tiian tiian  4096 2011-04-18 22:55 ..
-rwxr-xr-x  1 tiian tiian 11030 2011-04-22 16:26 example3_db2
-rw-r--r--  1 tiian tiian  5898 2011-04-22 16:23 example3_db2.c
	</screen>
	Check the content of <quote>DB2INST1.ORG</quote> table before
	program execution:
	<screen>
db2 => select * from DB2INST1.ORG

DEPTNUMB DEPTNAME       MANAGER DIVISION   LOCATION
-------- -------------- ------- ---------- -------------
      10 Head Office        160 Corporate  New York
      15 New England         50 Eastern    Boston
      20 Mid Atlantic        10 Eastern    Washington
      38 South Atlantic      30 Eastern    Atlanta
      42 Great Lakes        100 Midwest    Chicago
      51 Plains             140 Midwest    Dallas
      66 Pacific            270 Western    San Francisco
      84 Mountain           290 Western    Denver

  8 record(s) selected.

	</screen>
	Execute the program:
	<screen>
tiian@ubuntu:~/tmp$ ./example3_db2
	</screen>
	Check the content of the table again:
	<screen>
db2 => select * from DB2INST1.ORG

DEPTNUMB DEPTNAME       MANAGER DIVISION   LOCATION
-------- -------------- ------- ---------- -------------
      10 Head Office        160 Corporate  New York
      15 New England         50 Eastern    Boston
      20 Mid Atlantic        10 Eastern    Washington
      38 South Atlantic      30 Eastern    Atlanta
      42 Great Lakes        100 Midwest    Chicago
      51 Plains             140 Midwest    Dallas
      66 Pacific            270 Western    San Francisco
      84 Mountain           290 Western    Denver
     150 Europe             231 R&amp;D        Mojan

  9 record(s) selected.

	</screen>
	The example program inserted the last row! You can execute it again
	<screen>
tiian@ubuntu:~/tmp$ ./example3_db2
	</screen>
	and insert another row:
	<screen>
db2 => select * from DB2INST1.ORG

DEPTNUMB DEPTNAME       MANAGER DIVISION   LOCATION
-------- -------------- ------- ---------- -------------
      10 Head Office        160 Corporate  New York
      15 New England         50 Eastern    Boston
      20 Mid Atlantic        10 Eastern    Washington
      38 South Atlantic      30 Eastern    Atlanta
      42 Great Lakes        100 Midwest    Chicago
      51 Plains             140 Midwest    Dallas
      66 Pacific            270 Western    San Francisco
      84 Mountain           290 Western    Denver
     150 Europe             231 R&amp;D        Mojan
     150 Europe             231 R&amp;D        Mojan

  10 record(s) selected.

	</screen>
	Because there is no an unique constraint on this table.
      </para>
    </section>
  </section>
</chapter>
