<chapter>
  <title>Installation</title>
  <para>
    This chapter explains how to download, install, verify the software
    released by LIXA project.
  </para>
  <section>
    <title>System requirements</title>
    <para>
      LIXA project is developed on an x86 based 
      <link xlink:href="http://www.ubuntu.com/">
	<citetitle>Ubuntu 8.04 system</citetitle>
      </link>; it
      compiles and runs on both <emphasis>server</emphasis> and
      <emphasis>desktop</emphasis> flavors. Installation on a different 
      GNU/Linux
      distribution should be quite straightforward; installation on a different
      <trademark>UNIX</trademark> like system would probably need some work.
    </para>
    <para>
      If you successfully installed LIXA on a different system, you might
      publish your experience on the public forum hosted on SourceForge.net 
      and share your results with other users. 
    </para>
    <section>
      <title>Pre-requisites</title>
      <para>
	To compile LIXA software the GNU tools are needed: gcc, gmake, libtool.
	Autoconf and automake are used, but should not be necessary if you want
	to install the original tarball.
      </para>
      <para>
	Some <emphasis>libraries (run time and development stuff)</emphasis> 
	are necessary too:
	<itemizedlist mark='bullet'>
	  <listitem><para><application>libdl</application></para></listitem>
	  <listitem><para><application>libglib</application></para></listitem>
	  <listitem><para><application>libgmodule</application></para></listitem>
	  <listitem><para><application>libgthread</application></para></listitem>
	  <listitem><para><application>libm</application></para></listitem>
	  <listitem><para><application>libpthread</application></para></listitem>
	  <listitem><para><application>libuuid</application></para></listitem>
	  <listitem><para><application>libxml2</application></para></listitem>
	</itemizedlist>
	<application>libglib</application> (and others libg*) and 
	<application>libxml2</application> are discovered with 
	<command>pkg-config</command> command, while the others must be in
	standard include <envar>PATH</envar>.
      </para>
      <simplesect>
	<title>Low level pre-requisites</title>
	<para>
	  If you are trying to install LIXA software on a different operating
	  system, these are some fundamental requirements:
	  <itemizedlist mark='bullet'>
	    <listitem><para><function>poll</function>: 
		LIXA daemon uses this function for high parallelism network
		operations
	    </para></listitem>
	    <listitem><para><function>mmap</function>:
		LIXA daemon uses this function for high performance disk
		access
	    </para></listitem>
	    <listitem><para><function>dlopen</function>:
		LIXA transaction manager uses this function to dynamically load
		resource managers XA switch structures 
	    </para></listitem>
	    <listitem><para><function>uuid_generate</function>:
		LIXA transaction manager uses this function to generate unique
		transaction identifiers (xid)
	    </para></listitem>
	  </itemizedlist>
	  Without the above functions, a specific porting process is necessary
	  to adapt LIXA to your system.
	</para>
      </simplesect>
    </section>
    <section>
      <title>Co-requisites</title>
      <para>
	An XA transaction manager is used to coordinate one or more XA
	resource managers. From a LIXA perspective there are basically 3 type
	of resource managers:
	<orderedlist numeration="arabic">
	  <listitem><para>
	      <emphasis>LIXA testing:</emphasis> resource managers
	      provided by the project for testing and as sample implementations
	  </para></listitem>
	  <listitem><para>
	      <emphasis>F/OSS real:</emphasis> resource managers provided by
	      Free/Open Source Software projects; at the time of this
	      writing this set is empty, but it could improve in the near
	      future
	      <footnote><para>
		  I think the lack of the XA interface in the implementation 
		  of 
		  the F/OSS resource managers is a consequence of the lack of
		  a F/OSS transaction manager; looking at the Java ecosystem,
		  both MySQL and PostgreSQL supports JTA that's basically
		  <quote>a Java XA wrapper</quote> because there are JTA
		  compliant application server like Jboss and Jeronimo.
	      </para></footnote>
	  </para></listitem>
	  <listitem><para>
	      <emphasis>Proprietary real:</emphasis> resource managers
	      provided by business corporations using commercial licensing.
	  </para></listitem>
	</orderedlist>
	There is not a list of <emphasis>supported</emphasis> third party
	resource managers, because LIXA is a project and not a product; this
	is the list of third party resource managers have been tested in
	conjuction with LIXA transaction manager:
	<itemizedlist mark='bullet'>
	  <listitem><para><productname>
		IBM DB2 Express-C 9.7
	  </productname></para></listitem>
	  <listitem><para><productname>
		Oracle XE 10.2
	  </productname></para></listitem>
	</itemizedlist>
      </para>
    </section>
  </section>
  <section>
    <title>Software download</title>
    <para>
      The LIXA project is hosted on SourceForge.net portal at this URL:
      <link xlink:href="http://sourceforge.net/projects/lixa/">
	<citetitle>http://sourceforge.net/projects/lixa/</citetitle>
      </link>
    </para>
    <para>
      The software is available only as a <emphasis>source code</emphasis>
      tarball; no
      pre-compiled packages are available: you need C development tools
      installed to have success in LIXA installation. It is suggested to 
      download the gzipped tarball from the main page: the last available
      release is generally what you need; you could download a previous release
      if you had a reason to do it.
    </para>
    <para>
      Alternatively you can fetch the source code using a subversion client,
      but you should pay attention many commits on the subversion repository
      are intermediate works and can give you partial or broken under
      construction features.
    </para>
  </section>
  <section>
    <title>Configure, build and install</title>
    <para>
      LIXA project tries to adhere the GNU <emphasis>de facto</emphasis>
      standard. Supposing you downloaded package 
      <filename>lixa-X.Y.Z.tar.gz</filename>, the basic sequence is:
      <screen>
	tar xvzf lixa-X.Y.Z.tar.gz
	cd lixa-X.Y.Z
	./configure
	make
	make install
      </screen>
      The above commands, if nothing goes wrong, install the LIXA software
      artifacts in <filename>/opt/lixa</filename> default directory.
    </para>
    <para>
      There are many options you can pass to <command>configure</command>
      command to meet your needs (see below).
    </para>
    <simplesect>
      <title>Choosing a different installation <envar>PATH</envar></title>
    </simplesect>
    <para>
      At very first install <filename>/tmp</filename> could be a good
      destination:
      <screen>
	./configure --prefix=/tmp/lixa
      </screen>
    </para>
    <para>
      After some testing, you might prefer your home directory:
      <screen>
	./configure --prefix=$HOME/lixa
      </screen>
      and you will get a layout like this:
      <screen>
        $HOME/lixa/bin
        $HOME/lixa/etc
        $HOME/lixa/include
        $HOME/lixa/lib
        $HOME/lixa/sbin
        $HOME/lixa/var
      </screen>
    </para>
    <para>
      You can split code and data with something like this:
      <screen>
	./configure --prefix=/ --exec-prefix=/usr/local
      </screen>
    </para>
  </section>
</chapter>
